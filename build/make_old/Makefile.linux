#
# LINUX CLANG MAKEFILE
#

# prebuilt binary folder
PREBUILTDIR_X86 = ../../deps/prebuilt/linux/x86
PREBUILTDIR_X64 = ../../deps/prebuilt/linux/x64
SHAREDLIBEXT    = .so

# target platforms
TARGET_X86 = i686-linux-gnu
TARGET_X64 = x86_64-linux-gnu

# flags shared between all
FLAGS = -O3 \
        -fpic \
        -D_SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING \
        -Wno-deprecated-declarations

# Architecture flags
ARCHFLAGS_X86 = -msse -msse2
ARCHFLAGS_X64 = -msse -msse2

# C Compiler
CC_X86       = clang
CC_X64       = clang
CFLAGS_X86   = -static -m32 --target=$(TARGET_X86) $(ARCHFLAGS_X86) $(FLAGS)
CFLAGS_X64   = -static -m64 --target=$(TARGET_X64) $(ARCHFLAGS_X64) $(FLAGS)

# C++ Compiler
CXX_X86      = clang++
CXX_X64      = clang++
CXXFLAGS_X86 = -static -m32 -target $(TARGET_X86) $(ARCHFLAGS_X86) -Xclang -flto-visibility-public-std -std=c++17 $(FLAGS)
CXXFLAGS_X64 = -static -m64 -target $(TARGET_X64) $(ARCHFLAGS_X64) -Xclang -flto-visibility-public-std -std=c++17 $(FLAGS)

# JAVA JDK
JAR   = "$(JAVA_HOME)/bin/jar"
JAVAC = "$(JAVA_HOME)/bin/javac"

# File Operations
define deletefilepattern
	find $(1) -type f -name '$(2)' -delete
endef
define copyfilepattern
	cp $(1) $(2)
endef

# Platform Specific additional defines
ENGINE_DEFINES_X86_PLAT    = -DNEUROMORE_PLATFORM_LINUX
ENGINE_DEFINES_X64_PLAT    = -DNEUROMORE_PLATFORM_LINUX
ENGINEJNI_DEFINES_X86_PLAT = -DNEUROMORE_PLATFORM_LINUX
ENGINEJNI_DEFINES_X64_PLAT = -DNEUROMORE_PLATFORM_LINUX
QTBASE_DEFINES_X86_PLAT    = -DNEUROMORE_PLATFORM_LINUX -DQT_QPA_DEFAULT_PLATFORM_NAME=\"xcb\" -DQT_FEATURE_fontconfig=1
QTBASE_DEFINES_X64_PLAT    = -DNEUROMORE_PLATFORM_LINUX -DQT_QPA_DEFAULT_PLATFORM_NAME=\"xcb\" -DQT_FEATURE_fontconfig=1
STUDIO_DEFINES_X86_PLAT    = -DNEUROMORE_PLATFORM_LINUX -DQT_QPA_DEFAULT_PLATFORM_NAME=\"xcb\" -DQT_FEATURE_fontconfig=1
STUDIO_DEFINES_X64_PLAT    = -DNEUROMORE_PLATFORM_LINUX -DQT_QPA_DEFAULT_PLATFORM_NAME=\"xcb\" -DQT_FEATURE_fontconfig=1

# Platform Specific additional includes
ENGINE_INCLUDES_X86_PLAT    =
ENGINE_INCLUDES_X64_PLAT    =
ENGINEJNI_INCLUDES_X86_PLAT = -I"$(JAVA_HOME)/include" -I"$(JAVA_HOME)/include/linux"
ENGINEJNI_INCLUDES_X64_PLAT = -I"$(JAVA_HOME)/include" -I"$(JAVA_HOME)/include/linux"
QTBASE_INCLUDES_X86_PLAT    =
QTBASE_INCLUDES_X64_PLAT    =
STUDIO_INCLUDES_X86_PLAT    =
STUDIO_INCLUDES_X64_PLAT    =

#####################################################################################
# Qt MOC+RCC+UIC

MOC_X86 = ../../deps/build/make/bin/x86/qt-moc
MOC_X64 = ../../deps/build/make/bin/x64/qt-moc
ifneq (,$(findstring x86,$(MAKECMDGOALS)))
    MOC = $(MOC_X86)
endif
ifneq (,$(findstring x64,$(MAKECMDGOALS)))
    MOC = $(MOC_X64)
endif

RCC_X86 = ../../deps/build/make/bin/x86/qt-rcc
RCC_X64 = ../../deps/build/make/bin/x64/qt-rcc
ifneq (,$(findstring x86,$(MAKECMDGOALS)))
    RCC = $(RCC_X86)
endif
ifneq (,$(findstring x64,$(MAKECMDGOALS)))
    RCC = $(RCC_X64)
endif

UIC_X86 = ../../deps/build/make/bin/x86/qt-uic
UIC_X64 = ../../deps/build/make/bin/x64/qt-uic
ifneq (,$(findstring x86,$(MAKECMDGOALS)))
    UIC = $(UIC_X86)
endif
ifneq (,$(findstring x64,$(MAKECMDGOALS)))
    UIC = $(UIC_X64)
endif

#####################################################################################
# Include Common Makefile
include Makefile.common

# LIB Tool
LIB_X86      = ar
LIB_X64      = ar
LIBFLAGS_X86 = rc
LIBFLAGS_X64 = rc

# LIB Functions
define createlib32
	$(LIB_X86) $(LIBFLAGS_X86) $(LIBDIR_X86)/$(1).a $(2)
endef
define createlib64
	$(LIB_X64) $(LIBFLAGS_X64) $(LIBDIR_X64)/$(1).a $(2)
endef

#####################################################################################
# Linker
LINK_X86         = $(CXX_X86)
LINK_X64         = $(CXX_X64)
LINKFLAGS_X86    = -target $(TARGET_X86) -fuse-ld=lld $(FLAGS)
LINKFLAGS_X64    = -target $(TARGET_X64) -fuse-ld=lld $(FLAGS)
LINKFLAGSDYN_X86 = -fpic -shared -static-libstdc++
LINKFLAGSDYN_X64 = -fpic -shared -static-libstdc++

# Additional Linker Library Path for shared libraries
LINKPATH_X86 = -L./lib/x86
LINKPATH_X64 = -L./lib/x64

# Shared Libraries for X86 and X64 (for ALL projects
LINKLIBS_ALL = 

# Libraries for X86 or X64
LINKLIBS_X86 = $(LINKLIBS_ALL)
LINKLIBS_X64 = $(LINKLIBS_ALL)

# Linker Functions for Executable
define createbin32
	$(LINK_X86) $(LINKFLAGS_X86) $(LINKPATH_X86) $(2) $(3) $(LINKLIBS_X86) -o $(BINDIR_X86)/$(1) 
endef
define createbin64
	$(LINK_X64) $(LINKFLAGS_X64) $(LINKPATH_X64) $(2) $(3) $(LINKLIBS_X64) -o $(BINDIR_X64)/$(1)  
endef

# Linker Functions for Shared Library
define createshared32
	$(LINK_X86) $(LINKFLAGS_X86) $(LINKFLAGSDYN_X86) $(LINKPATH_X86) $(2) $(3) $(LINKLIBS_X86) -o $(LIBDIR_X86)/$(1).so
endef
define createshared64
	$(LINK_X64) $(LINKFLAGS_X64) $(LINKFLAGSDYN_X64) $(LINKPATH_X64) $(2) $(3) $(LINKLIBS_X64) -o $(LIBDIR_X64)/$(1).so
endef

#####################################################################################
# Platform Specific additional objects to build
#####################################################################################

ENGINE_OBJS     = $(ENGINE_OBJS_ALL)

ENGINEJNI_OBJS     = $(ENGINEJNI_OBJS_ALL)
ENGINEJNI_JOBJS    = $(ENGINEJNI_JOBJS_ALL)
ENGINEJNI_LIBS_X86 = $(LIBDIR_X86)/Engine.a \
                     $(DEPSLIBDIR_X86)/edflib.a \
                     $(DEPSLIBDIR_X86)/oscpack.a \
                     $(DEPSLIBDIR_X86)/kissfft.a \
                     $(DEPSLIBDIR_X86)/zlib.a
ENGINEJNI_LIBS_X64 = $(LIBDIR_X64)/Engine.a \
                     $(DEPSLIBDIR_X64)/edflib.a \
                     $(DEPSLIBDIR_X64)/oscpack.a \
                     $(DEPSLIBDIR_X64)/kissfft.a \
                     $(DEPSLIBDIR_X64)/zlib.a

QTBASE_MOCH     = $(QTBASE_MOCH_ALL)
QTBASE_MOCC     = $(QTBASE_MOCC_ALL)
QTBASE_UICH     = $(QTBASE_UICH_ALL)
QTBASE_RCCH     = $(QTBASE_RCCH_ALL)
QTBASE_OBJS     = $(QTBASE_OBJS_ALL)
QTBASE_OBJS_MOC = $(QTBASE_OBJS_MOC_ALL)
QTBASE_OBJS_RCC = $(QTBASE_OBJS_RCC_ALL)

STUDIO_MOCH     = $(STUDIO_MOCH_ALL)
STUDIO_MOCC     = $(STUDIO_MOCC_ALL)
STUDIO_UICH     = $(STUDIO_UICH_ALL)
STUDIO_RCCH     = $(STUDIO_RCCH_ALL)
STUDIO_OBJS     = $(STUDIO_OBJS_ALL)
STUDIO_OBJS_MOC = $(STUDIO_OBJS_MOC_ALL)
STUDIO_OBJS_RCC = $(STUDIO_OBJS_RCC_ALL)
STUDIO_RES      = $(STUDIO_RES_ALL)
STUDIO_LIBS_ALL = -lpthread \
                  -ldl \
                  -lgstallocators-1.0 \
                  -lgstapp-1.0 \
                  -lgstaudio-1.0 \
                  -lgstbase-1.0 \
                  -lgstbasecamerabinsrc-1.0 \
                  -lgstcheck-1.0 \
                  -lgstcontroller-1.0 \
                  -lgstgl-1.0 \
                  -lgstpbutils-1.0 \
                  -lgstphotography-1.0 \
                  -lgstreamer-1.0 \
                  -lgstvideo-1.0 \
                  -lgobject-2.0 \
                  -lglib-2.0 \
                  -lGL \
                  -lexpat \
                  -lX11 \
                  -lX11-xcb \
                  -lxkbcommon \
                  -lxcb \
                  -lxcb-glx \
                  -lxcb-icccm \
                  -lxcb-image \
                  -lxcb-keysyms \
                  -lxcb-randr \
                  -lxcb-render \
                  -lxcb-render-util \
                  -lxcb-shape \
                  -lxcb-shm \
                  -lxcb-sync \
                  -lxcb-xfixes \
                  -lxcb-xinerama \
                  -lxcb-xkb
STUDIO_LIBS_X86 = $(LIBDIR_X86)/QtBase.a \
                  $(LIBDIR_X86)/Engine.a \
                  $(DEPSLIBDIR_X86)/singleapplication.a \
                  $(DEPSLIBDIR_X86)/qt-bluetooth.a \
                  $(DEPSLIBDIR_X86)/qt-eventdispatchers.a \
                  $(DEPSLIBDIR_X86)/qt-gamepad.a \
                  $(DEPSLIBDIR_X86)/qt-multimediaplugins.a \
                  $(DEPSLIBDIR_X86)/qt-multimediawidgets.a \
                  $(DEPSLIBDIR_X86)/qt-multimedia.a \
                  $(DEPSLIBDIR_X86)/qt-network.a \
                  $(DEPSLIBDIR_X86)/qt-opengl.a \
                  $(DEPSLIBDIR_X86)/qt-platform-xcb.a \
                  $(DEPSLIBDIR_X86)/qt-fontdatabases.a \
                  $(DEPSLIBDIR_X86)/qt-printsupport.a \
                  $(DEPSLIBDIR_X86)/qt-serialport.a \
                  $(DEPSLIBDIR_X86)/qt-widgets.a \
                  $(DEPSLIBDIR_X86)/qt-gui.a \
                  $(DEPSLIBDIR_X86)/qt-xml.a \
                  $(DEPSLIBDIR_X86)/qt-dbus.a \
                  $(DEPSLIBDIR_X86)/qt-concurrent.a \
                  $(DEPSLIBDIR_X86)/qt-core.a \
                  $(DEPSLIBDIR_X86)/double-conversion.a \
                  $(DEPSLIBDIR_X86)/edflib.a \
                  $(DEPSLIBDIR_X86)/fontconfig.a \
                  $(DEPSLIBDIR_X86)/freetype.a \
                  $(DEPSLIBDIR_X86)/harfbuzz.a \
                  $(DEPSLIBDIR_X86)/harfbuzz-ng.a \
                  $(DEPSLIBDIR_X86)/kissfft.a \
                  $(DEPSLIBDIR_X86)/libssl.a \
                  $(DEPSLIBDIR_X86)/libcrypto.a \
                  $(DEPSLIBDIR_X86)/brainflow-boardcontroller.a \
                  $(DEPSLIBDIR_X86)/brainflow.a \
                  $(DEPSLIBDIR_X86)/opencv-core.a \
                  $(DEPSLIBDIR_X86)/opencv-imgcodecs.a \
                  $(DEPSLIBDIR_X86)/opencv-imgproc.a \
                  $(DEPSLIBDIR_X86)/opencv-videoio.a \
                  $(DEPSLIBDIR_X86)/minizip.a \
                  $(DEPSLIBDIR_X86)/dspfilters.a \
                  $(DEPSLIBDIR_X86)/wavelib.a \
                  $(DEPSLIBDIR_X86)/oscpack.a \
                  $(DEPSLIBDIR_X86)/pcre2.a \
                  $(DEPSLIBDIR_X86)/tinyaes.a \
                  $(DEPSLIBDIR_X86)/tinyobjloader.a \
                  $(DEPSLIBDIR_X86)/tinyxml.a \
                  $(DEPSLIBDIR_X86)/libjpeg.a \
                  $(DEPSLIBDIR_X86)/libpng.a \
                  $(DEPSLIBDIR_X86)/libsvm.a \
                  $(DEPSLIBDIR_X86)/zlib.a \
                  $(STUDIO_LIBS_ALL)
STUDIO_LIBS_X64 = $(LIBDIR_X64)/QtBase.a \
                  $(LIBDIR_X64)/Engine.a \
                  $(DEPSLIBDIR_X64)/singleapplication.a \
                  $(DEPSLIBDIR_X64)/qt-bluetooth.a \
                  $(DEPSLIBDIR_X64)/qt-eventdispatchers.a \
                  $(DEPSLIBDIR_X64)/qt-gamepad.a \
                  $(DEPSLIBDIR_X64)/qt-multimediaplugins.a \
                  $(DEPSLIBDIR_X64)/qt-multimediawidgets.a \
                  $(DEPSLIBDIR_X64)/qt-multimedia.a \
                  $(DEPSLIBDIR_X64)/qt-network.a \
                  $(DEPSLIBDIR_X64)/qt-opengl.a \
                  $(DEPSLIBDIR_X64)/qt-platform-xcb.a \
                  $(DEPSLIBDIR_X64)/qt-fontdatabases.a \
                  $(DEPSLIBDIR_X64)/qt-printsupport.a \
                  $(DEPSLIBDIR_X64)/qt-serialport.a \
                  $(DEPSLIBDIR_X64)/qt-widgets.a \
                  $(DEPSLIBDIR_X64)/qt-gui.a \
                  $(DEPSLIBDIR_X64)/qt-xml.a \
                  $(DEPSLIBDIR_X64)/qt-dbus.a \
                  $(DEPSLIBDIR_X64)/qt-concurrent.a \
                  $(DEPSLIBDIR_X64)/qt-core.a \
                  $(DEPSLIBDIR_X64)/double-conversion.a \
                  $(DEPSLIBDIR_X64)/edflib.a \
                  $(DEPSLIBDIR_X64)/fontconfig.a \
                  $(DEPSLIBDIR_X64)/freetype.a \
                  $(DEPSLIBDIR_X64)/harfbuzz.a \
                  $(DEPSLIBDIR_X64)/harfbuzz-ng.a \
                  $(DEPSLIBDIR_X64)/kissfft.a \
                  $(DEPSLIBDIR_X64)/libssl.a \
                  $(DEPSLIBDIR_X64)/libcrypto.a \
                  $(DEPSLIBDIR_X64)/brainflow-boardcontroller.a \
                  $(DEPSLIBDIR_X64)/brainflow.a \
                  $(DEPSLIBDIR_X64)/opencv-core.a \
                  $(DEPSLIBDIR_X64)/opencv-imgcodecs.a \
                  $(DEPSLIBDIR_X64)/opencv-imgproc.a \
                  $(DEPSLIBDIR_X64)/opencv-videoio.a \
                  $(DEPSLIBDIR_X64)/minizip.a \
                  $(DEPSLIBDIR_X64)/dspfilters.a \
                  $(DEPSLIBDIR_X64)/wavelib.a \
                  $(DEPSLIBDIR_X64)/oscpack.a \
                  $(DEPSLIBDIR_X64)/pcre2.a \
                  $(DEPSLIBDIR_X64)/tinyaes.a \
                  $(DEPSLIBDIR_X64)/tinyobjloader.a \
                  $(DEPSLIBDIR_X64)/tinyxml.a \
                  $(DEPSLIBDIR_X64)/libjpeg.a \
                  $(DEPSLIBDIR_X64)/libpng.a \
                  $(DEPSLIBDIR_X64)/libsvm.a \
                  $(DEPSLIBDIR_X64)/zlib.a \
                  $(STUDIO_LIBS_ALL)

#####################################################################################
# Include Targets

include Makefile.targets

all-x86: all-common-x86 \
         Studio-x86

all-x64: all-common-x64 \
         Studio-x64

all: all-x86 all-x64
