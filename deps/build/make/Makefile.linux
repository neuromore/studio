#
# LINUX CLANG MAKEFILE
#

# target platforms
TARGET_X86 = i686-linux-gnu
TARGET_X64 = x86_64-linux-gnu

# flags shared between all
FLAGS = -O2 -D_SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING \
        -Wno-deprecated-declarations \
        -Wno-incompatible-pointer-types \
        -Wno-implicit-function-declaration \
        -Wno-implicit-int \
        -Wno-int-conversion

# Architecture flags
ARCHFLAGS_X86 = -msse -msse2
ARCHFLAGS_X64 = -msse -msse2

# C Compiler
CC           = clang
CFLAGS_X86   = -m32 --target=$(TARGET_X86) $(ARCHFLAGS_X86) $(FLAGS)
CFLAGS_X64   = -m64 --target=$(TARGET_X64) $(ARCHFLAGS_X64) $(FLAGS)

# C++ Compiler
CXX            = clang++
CXXFLAGS_ALL   = -Xclang -flto-visibility-public-std $(FLAGS)
CXXFLAGS_A_X86 = -m32 -target $(TARGET_X86) $(ARCHFLAGS_X86) $(CXXFLAGS_ALL)
CXXFLAGS_A_X64 = -m64 -target $(TARGET_X64) $(ARCHFLAGS_X64) $(CXXFLAGS_ALL)
CXXFLAGS_X86   = $(CXXFLAGS_A_X86) -std=c++17 
CXXFLAGS_X64   = $(CXXFLAGS_A_X64) -std=c++17 
CXX14FLAGS_X86 = $(CXXFLAGS_A_X86) -std=c++14
CXX14FLAGS_X64 = $(CXXFLAGS_A_X64) -std=c++14

# File Operations
define deletefilepattern
	find $(1) -type f -name '$(2)' -delete
endef

# Platform Specific additional defines
LIBCRYPTO_DEFINES_X86_PLAT          = -DOPENSSLDIR=\"/etc/ssl\" -DENGINESDIR=\".\" 
LIBCRYPTO_DEFINES_X64_PLAT          = -DOPENSSLDIR=\"/etc/ssl\" -DENGINESDIR=\".\" 
LIBSSL_DEFINES_X86_PLAT             = -DOPENSSLDIR=\"/etc/ssl\" -DENGINESDIR=\".\" 
LIBSSL_DEFINES_X64_PLAT             = -DOPENSSLDIR=\"/etc/ssl\" -DENGINESDIR=\".\" 
FONTCONFIG_DEFINES_X86_PLAT         = -DFONTCONFIG_PATH=\"/etc/fonts\" -DFC_CACHEDIR=\"~/.cache/fontconfig\" -DFC_TEMPLATEDIR=\"/usr/share/fontconfig/conf.avail\"
FONTCONFIG_DEFINES_X64_PLAT         = -DFONTCONFIG_PATH=\"/etc/fonts\" -DFC_CACHEDIR=\"~/.cache/fontconfig\" -DFC_TEMPLATEDIR=\"/usr/share/fontconfig/conf.avail\"
OPENCVCORE_DEFINES_X86_PLAT         =
OPENCVCORE_DEFINES_X64_PLAT         =
OPENCVIMGCODECS_DEFINES_X86_PLAT    =
OPENCVIMGCODECS_DEFINES_X64_PLAT    =
OPENCVIMGPROC_DEFINES_X86_PLAT      =
OPENCVIMGPROC_DEFINES_X64_PLAT      =
OPENCVVIDEOIO_DEFINES_X86_PLAT      =
OPENCVVIDEOIO_DEFINES_X64_PLAT      =
QTBOOTSTRAP_DEFINES_X86_PLAT        =
QTBOOTSTRAP_DEFINES_X64_PLAT        =
QTMOC_DEFINES_X86_PLAT              =
QTMOC_DEFINES_X64_PLAT              =
QTRCC_DEFINES_X86_PLAT              =
QTRCC_DEFINES_X64_PLAT              =
QTUIC_DEFINES_X86_PLAT              =
QTUIC_DEFINES_X64_PLAT              =
QTBLUETOOTH_DEFINES_X86_PLAT        = -DQT_FEATURE_bluez=1 -DQT_FEATURE_dbus=1
QTBLUETOOTH_DEFINES_X64_PLAT        = -DQT_FEATURE_bluez=1 -DQT_FEATURE_dbus=1
QTCONCURRENT_DEFINES_X86_PLAT       =
QTCONCURRENT_DEFINES_X64_PLAT       =
QTCORE_DEFINES_X86_PLAT             = -DQT_UNIX_SEMAPHORE -DQT_FEATURE_dbus=1
QTCORE_DEFINES_X64_PLAT             = -DQT_UNIX_SEMAPHORE -DQT_FEATURE_dbus=1
QTDBUS_DEFINES_X86_PLAT             = -DQT_FEATURE_dbus=1
QTDBUS_DEFINES_X64_PLAT             = -DQT_FEATURE_dbus=1
QTEVENTDISPATCHERS_DEFINES_X86_PLAT =
QTEVENTDISPATCHERS_DEFINES_X64_PLAT =
QTFONTDATABASES_DEFINES_X86_PLAT    = -DQT_FEATURE_fontconfig=1
QTFONTDATABASES_DEFINES_X64_PLAT    = -DQT_FEATURE_fontconfig=1
QTGAMEPAD_DEFINES_X86_PLAT          =
QTGAMEPAD_DEFINES_X64_PLAT          =
QTGUI_DEFINES_X86_PLAT              = -DQT_QPA_DEFAULT_PLATFORM_NAME=\"xcb\" -DQT_FEATURE_fontconfig=1 -DQT_FEATURE_dbus=1
QTGUI_DEFINES_X64_PLAT              = -DQT_QPA_DEFAULT_PLATFORM_NAME=\"xcb\" -DQT_FEATURE_fontconfig=1 -DQT_FEATURE_dbus=1
QTMULTIMEDIA_DEFINES_X86_PLAT       =
QTMULTIMEDIA_DEFINES_X64_PLAT       =
QTMULTIMEDIAWIDGETS_DEFINES_X86_PLAT=
QTMULTIMEDIAWIDGETS_DEFINES_X64_PLAT=
QTNETWORK_DEFINES_X86_PLAT          = -DOPENSSLDIR=\"/etc/ssl\" -DENGINESDIR=\".\"
QTNETWORK_DEFINES_X64_PLAT          = -DOPENSSLDIR=\"/etc/ssl\" -DENGINESDIR=\".\"
QTOPENGL_DEFINES_X86_PLAT           =
QTOPENGL_DEFINES_X64_PLAT           =
QTPLATFORMWINDOWS_DEFINES_X86_PLAT  =
QTPLATFORMWINDOWS_DEFINES_X64_PLAT  =
QTPLATFORMXCB_DEFINES_X86_PLAT      = -DQT_QPA_DEFAULT_PLATFORM_NAME=\"xcb\" -DQT_FEATURE_fontconfig=1 -DQT_FEATURE_dbus=1
QTPLATFORMXCB_DEFINES_X64_PLAT      = -DQT_QPA_DEFAULT_PLATFORM_NAME=\"xcb\" -DQT_FEATURE_fontconfig=1 -DQT_FEATURE_dbus=1
QTPLATFORMCOCOA_DEFINES_X86_PLAT    =
QTPLATFORMCOCOA_DEFINES_X64_PLAT    =
QTPRINTSUPPORT_DEFINES_X86_PLAT     =
QTPRINTSUPPORT_DEFINES_X64_PLAT     =
QTSERIALPORT_DEFINES_X86_PLAT       =
QTSERIALPORT_DEFINES_X64_PLAT       =
QTWIDGETS_DEFINES_X86_PLAT          =
QTWIDGETS_DEFINES_X64_PLAT          =
QTXML_DEFINES_X86_PLAT              =
QTXML_DEFINES_X64_PLAT              =
SINGLEAPPLICATION_DEFINES_X86_PLAT  =
SINGLEAPPLICATION_DEFINES_X64_PLAT  =

# Platform Specific additional includes
OPENCVCORE_INCLUDES_X86_PLAT         =
OPENCVCORE_INCLUDES_X64_PLAT         =
OPENCVIMGCODECS_INCLUDES_X86_PLAT    =
OPENCVIMGCODECS_INCLUDES_X64_PLAT    =
OPENCVIMGPROC_INCLUDES_X86_PLAT      =
OPENCVIMGPROC_INCLUDES_X64_PLAT      =
OPENCVVIDEOIO_INCLUDES_X86_PLAT      =
OPENCVVIDEOIO_INCLUDES_X64_PLAT      =
QTBOOTSTRAP_INCLUDES_X86_PLAT        = -I../../include/qt/mkspecs/linux-clang
QTBOOTSTRAP_INCLUDES_X64_PLAT        = -I../../include/qt/mkspecs/linux-clang
QTMOC_INCLUDES_X86_PLAT              = -I../../include/qt/mkspecs/linux-clang
QTMOC_INCLUDES_X64_PLAT              = -I../../include/qt/mkspecs/linux-clang
QTRCC_INCLUDES_X86_PLAT              = -I../../include/qt/mkspecs/linux-clang
QTRCC_INCLUDES_X64_PLAT              = -I../../include/qt/mkspecs/linux-clang
QTUIC_INCLUDES_X86_PLAT              = -I../../include/qt/mkspecs/linux-clang
QTUIC_INCLUDES_X64_PLAT              = -I../../include/qt/mkspecs/linux-clang
QTBLUETOOTH_INCLUDES_X86_PLAT        = -I../../include/qt/mkspecs/linux-clang
QTBLUETOOTH_INCLUDES_X64_PLAT        = -I../../include/qt/mkspecs/linux-clang
QTCONCURRENT_INCLUDES_X86_PLAT       = -I../../include/qt/mkspecs/linux-clang
QTCONCURRENT_INCLUDES_X64_PLAT       = -I../../include/qt/mkspecs/linux-clang
QTCORE_INCLUDES_X86_PLAT             = -I../../include/qt/mkspecs/linux-clang -I../../include/forkfd
QTCORE_INCLUDES_X64_PLAT             = -I../../include/qt/mkspecs/linux-clang -I../../include/forkfd
QTDBUS_INCLUDES_X86_PLAT             = -I../../include/qt/mkspecs/linux-clang
QTDBUS_INCLUDES_X64_PLAT             = -I../../include/qt/mkspecs/linux-clang
QTEVENTDISPATCHERS_INCLUDES_X86_PLAT = -I../../include/qt/mkspecs/linux-clang
QTEVENTDISPATCHERS_INCLUDES_X64_PLAT = -I../../include/qt/mkspecs/linux-clang
QTFONTDATABASES_INCLUDES_X86_PLAT    = -I../../include/qt/mkspecs/linux-clang
QTFONTDATABASES_INCLUDES_X64_PLAT    = -I../../include/qt/mkspecs/linux-clang
QTGAMEPAD_INCLUDES_X86_PLAT          = -I../../include/qt/mkspecs/linux-clang
QTGAMEPAD_INCLUDES_X64_PLAT          = -I../../include/qt/mkspecs/linux-clang
QTGUI_INCLUDES_X86_PLAT              = -I../../include/qt/mkspecs/linux-clang
QTGUI_INCLUDES_X64_PLAT              = -I../../include/qt/mkspecs/linux-clang
QTMULTIMEDIA_INCLUDES_X86_PLAT       = -I../../include/qt/mkspecs/linux-clang
QTMULTIMEDIA_INCLUDES_X64_PLAT       = -I../../include/qt/mkspecs/linux-clang
QTMULTIMEDIAWIDGETS_INCLUDES_X86_PLAT= -I../../include/qt/mkspecs/linux-clang
QTMULTIMEDIAWIDGETS_INCLUDES_X64_PLAT= -I../../include/qt/mkspecs/linux-clang
QTNETWORK_INCLUDES_X86_PLAT          = -I../../include/qt/mkspecs/linux-clang
QTNETWORK_INCLUDES_X64_PLAT          = -I../../include/qt/mkspecs/linux-clang
QTOPENGL_INCLUDES_X86_PLAT           = -I../../include/qt/mkspecs/linux-clang
QTOPENGL_INCLUDES_X64_PLAT           = -I../../include/qt/mkspecs/linux-clang
QTPLATFORMWINDOWS_INCLUDES_X86_PLAT  = -I../../include/qt/mkspecs/linux-clang
QTPLATFORMWINDOWS_INCLUDES_X64_PLAT  = -I../../include/qt/mkspecs/linux-clang
QTPLATFORMXCB_INCLUDES_X86_PLAT      = -I../../include/qt/mkspecs/linux-clang
QTPLATFORMXCB_INCLUDES_X64_PLAT      = -I../../include/qt/mkspecs/linux-clang
QTPLATFORMCOCOA_INCLUDES_X86_PLAT    = -I../../include/qt/mkspecs/linux-clang
QTPLATFORMCOCOA_INCLUDES_X64_PLAT    = -I../../include/qt/mkspecs/linux-clang
QTPRINTSUPPORT_INCLUDES_X86_PLAT     = -I../../include/qt/mkspecs/linux-clang
QTPRINTSUPPORT_INCLUDES_X64_PLAT     = -I../../include/qt/mkspecs/linux-clang
QTSERIALPORT_INCLUDES_X86_PLAT       = -I../../include/qt/mkspecs/linux-clang
QTSERIALPORT_INCLUDES_X64_PLAT       = -I../../include/qt/mkspecs/linux-clang
QTWIDGETS_INCLUDES_X86_PLAT          = -I../../include/qt/mkspecs/linux-clang
QTWIDGETS_INCLUDES_X64_PLAT          = -I../../include/qt/mkspecs/linux-clang
QTXML_INCLUDES_X86_PLAT              = -I../../include/qt/mkspecs/linux-clang
QTXML_INCLUDES_X64_PLAT              = -I../../include/qt/mkspecs/linux-clang
SINGLEAPPLICATION_INCLUDES_X86_PLAT  = -I../../include/qt/mkspecs/linux-clang
SINGLEAPPLICATION_INCLUDES_X64_PLAT  = -I../../include/qt/mkspecs/linux-clang

#####################################################################################
# Qt MOC+RCC+UIC

MOC_X86 = bin/x86/qt-moc
MOC_X64 = bin/x64/qt-moc
ifneq (,$(findstring x86,$(MAKECMDGOALS)))
    MOC = $(MOC_X86)
endif
ifneq (,$(findstring x64,$(MAKECMDGOALS)))
    MOC = $(MOC_X64)
endif

RCC_X86 = bin/x86/qt-rcc
RCC_X64 = bin/x64/qt-rcc
ifneq (,$(findstring x86,$(MAKECMDGOALS)))
    RCC = $(RCC_X86)
endif
ifneq (,$(findstring x64,$(MAKECMDGOALS)))
    RCC = $(RCC_X64)
endif

UIC_X86 = bin/x86/qt-uic
UIC_X64 = bin/x64/qt-uic
ifneq (,$(findstring x86,$(MAKECMDGOALS)))
    UIC = $(UIC_X86)
endif
ifneq (,$(findstring x64,$(MAKECMDGOALS)))
    UIC = $(UIC_X64)
endif

# Platform specific bash file exists check
QTCORE_MOC_CMD_X86 = if [ -f $(@:$(QTCORE_MOCDIR_X86)/%.moc=$(QTCORE_SRCDIR)/%.cpp) ]; then $(QTCORE_MOC_C_X86); else $(QTCORE_MOC_MM_X86); fi
QTCORE_MOC_CMD_X64 = if [ -f $(@:$(QTCORE_MOCDIR_X64)/%.moc=$(QTCORE_SRCDIR)/%.cpp) ]; then $(QTCORE_MOC_C_X64); else $(QTCORE_MOC_MM_X64); fi

#####################################################################################
# Include Common Makefile
include Makefile.common

# LIB Tool
LIB          = ar
LIBFLAGS_X86 = rc
LIBFLAGS_X64 = rc

# LIB Functions
define createlib32
	$(LIB) $(LIBFLAGS_X86) $(LIBDIR_X86)/$(1).a $(2)
endef
define createlib64
	$(LIB) $(LIBFLAGS_X64) $(LIBDIR_X64)/$(1).a $(2)
endef

#####################################################################################
# Linker
LINK          = $(CXX)
LINKFLAGS_X86 = $(CXXFLAGS_X86)
LINKFLAGS_X64 = $(CXXFLAGS_X64)

# Linker Library Path
LINKPATH_X86 = -L./lib/x86
LINKPATH_X64 = -L./lib/x64

# Libraries for X86 and X64
LINKLIBS_ALL = 

# Libraries for X86 or X64
LINKLIBS_X86 = $(LINKLIBS_ALL)
LINKLIBS_X64 = $(LINKLIBS_ALL)

# Linker Functions
define createbin32
	$(LINK) $(LINKFLAGS_X86) $(LINKPATH_X86) $(2) $(3) $(LINKLIBS_X86) -o $(BINDIR_X86)/$(1) 
endef
define createbin64
	$(LINK) $(LINKFLAGS_X64) $(LINKPATH_X64) $(2) $(3) $(LINKLIBS_X64) -o $(BINDIR_X64)/$(1)  
endef

#####################################################################################
# Platform Specific additional objects to build
#####################################################################################

# Small libraries
ZLIB_OBJS            = $(ZLIB_OBJS_ALL)
LIBCRYPTO_OBJS       = $(LIBCRYPTO_OBJS_ALL)
LIBSSL_OBJS          = $(LIBSSL_OBJS_ALL)
LIBPNG_OBJS          = $(LIBPNG_OBJS_ALL)
LIBJPEG_OBJS         = $(LIBJPEG_OBJS_ALL)
PCRE2_OBJS           = $(PCRE2_OBJS_ALL)
DOUBLECONV_OBJS      = $(DOUBLECONV_OBJS_ALL)
EDFLIB_OBJS          = $(EDFLIB_OBJS_ALL)
FONTCONFIG_OBJS      = $(FONTCONFIG_OBJS_ALL) \
                       fcarch.o fcatomic.o fccache.o fccfg.o fccharset.o fccompat.o \
                       fcdbg.o fcdefault.o fcdir.o fcformat.o fcfreetype.o fcfs.o \
                       fchash.o fcinit.o fclang.o fclist.o fcmatch.o fcmatrix.o \
                       fcname.o fcobjs.o fcpat.o fcptrlist.o fcrange.o fcserialize.o \
                       fcstat.o fcstr.o fcweight.o fcxml.o ftglue.o
FREETYPE_OBJS        = $(FREETYPE_OBJS_ALL)
HARFBUZZ_OBJS_C      = $(HARFBUZZ_OBJS_ALL_C)
HARFBUZZ_OBJS_CXX    = $(HARFBUZZ_OBJS_ALL_CXX)
HARFBUZZNG_OBJS      = $(HARFBUZZNG_OBJS_ALL)
KISSFFT_OBJS         = $(KISSFFT_OBJS_ALL)
MINIZIP_OBJS         = $(MINIZIP_OBJS_ALL)
OPENCVCORE_OBJS      = $(OPENCVCORE_OBJS_ALL)
OPENCVIMGCODECS_OBJS = $(OPENCVIMGCODECS_OBJS_ALL)
OPENCVIMGPROC_OBJS   = $(OPENCVIMGPROC_OBJS_ALL)
OPENCVVIDEOIO_OBJS   = $(OPENCVVIDEOIO_OBJS_ALL) \
                       cap_v4l.o
OSCPACK_OBJS         = $(OSCPACK_OBJS_ALL)
TINYAES_OBJS         = $(TINYAES_OBJS_ALL)
TINYOBJLOADER_OBJS   = $(TINYOBJLOADER_OBJS_ALL)
TINYXML_OBJS         = $(TINYXML_OBJS_ALL)

# Qt Bootstrap
QTBOOTSTRAP_OBJS = $(QTBOOTSTRAP_OBJS_ALL) \
                   qt-core/io/qfilesystemengine_unix.o \
                   qt-core/io/qfilesystemiterator_unix.o \
                   qt-core/io/qfsfileengine_unix.o \
                   qt-core/io/qstandardpaths_unix.o \
                   qt-core/kernel/qcore_unix.o

# Qt Tools
QTMOC_OBJS     = $(QTMOC_OBJS_ALL)
QTMOC_LIBS_X86 = $(LIBDIR_X86)/qt-bootstrap.a $(LIBDIR_X86)/zlib.a
QTMOC_LIBS_X64 = $(LIBDIR_X64)/qt-bootstrap.a $(LIBDIR_X64)/zlib.a
QTRCC_OBJS     = $(QTRCC_OBJS_ALL)
QTRCC_LIBS_X86 = $(LIBDIR_X86)/qt-bootstrap.a $(LIBDIR_X86)/zlib.a
QTRCC_LIBS_X64 = $(LIBDIR_X64)/qt-bootstrap.a $(LIBDIR_X64)/zlib.a
QTUIC_OBJS     = $(QTUIC_OBJS_ALL)
QTUIC_LIBS_X86 = $(LIBDIR_X86)/qt-bootstrap.a $(LIBDIR_X86)/zlib.a
QTUIC_LIBS_X64 = $(LIBDIR_X64)/qt-bootstrap.a $(LIBDIR_X64)/zlib.a

# Qt Libraries
QTBLUETOOTH_MOCH            = $(QTBLUETOOTH_MOCH_ALL) \
                              private/qbluetoothsocket_bluez_p.cpp \
                              private/qbluetoothsocket_bluezdbus_p.cpp \
                              private/qbluetoothtransferreply_bluez_p.cpp \
                              private/qlowenergycontroller_p.cpp \
                              private/qlowenergycontroller_bluez_p.cpp \
                              private/qlowenergycontroller_bluezdbus_p.cpp \
                              private/qlowenergyserviceprivate_p.cpp \
                              private/bluez/adapter_p.cpp \
                              private/bluez/adapter1_bluez5_p.cpp \
                              private/bluez/agent_p.cpp \
                              private/bluez/battery1_p.cpp \
                              private/bluez/bluetoothmanagement_p.cpp \
                              private/bluez/bluez5_helper_p.cpp \
                              private/bluez/device_p.cpp \
                              private/bluez/device1_bluez5_p.cpp \
                              private/bluez/gattchar1_p.cpp \
                              private/bluez/gattdesc1_p.cpp \
                              private/bluez/gattservice1_p.cpp \
                              private/bluez/hcimanager_p.cpp \
                              private/bluez/manager_p.cpp \
                              private/bluez/obex_agent_p.cpp \
                              private/bluez/obex_client_p.cpp \
                              private/bluez/obex_client1_bluez5_p.cpp \
                              private/bluez/obex_manager_p.cpp \
                              private/bluez/obex_objectpush1_bluez5_p.cpp \
                              private/bluez/obex_transfer_p.cpp \
                              private/bluez/obex_transfer1_bluez5_p.cpp \
                              private/bluez/objectmanager_p.cpp \
                              private/bluez/profile1_p.cpp \
                              private/bluez/profile1context_p.cpp \
                              private/bluez/profilemanager1_p.cpp \
                              private/bluez/properties_p.cpp \
                              private/bluez/remotedevicemanager_p.cpp \
                              private/bluez/service_p.cpp \
                              private/bluez/servicemap_p.cpp
QTBLUETOOTH_MOCC            = $(QTBLUETOOTH_MOCC_ALL)
QTBLUETOOTH_OBJS            = $(QTBLUETOOTH_OBJS_ALL) \
                              bluez/adapter.o \
                              bluez/adapter1_bluez5.o \
                              bluez/agent.o \
                              bluez/battery1.o \
                              bluez/bluetoothmanagement.o \
                              bluez/bluez5_helper.o \
                              bluez/device.o \
                              bluez/device1_bluez5.o \
                              bluez/gattchar1.o \
                              bluez/gattdesc1.o \
                              bluez/gattservice1.o \
                              bluez/hcimanager.o \
                              bluez/manager.o \
                              bluez/obex_agent.o \
                              bluez/obex_client.o \
                              bluez/obex_client1_bluez5.o \
                              bluez/obex_manager.o \
                              bluez/obex_objectpush1_bluez5.o \
                              bluez/obex_transfer.o \
                              bluez/obex_transfer1_bluez5.o \
                              bluez/objectmanager.o \
                              bluez/profile1.o \
                              bluez/profile1context.o \
                              bluez/profilemanager1.o \
                              bluez/properties.o \
                              bluez/remotedevicemanager.o \
                              bluez/service.o \
                              bluez/servicemap.o \
                              lecmaccalculator.o \
                              qbluetoothdevicediscoveryagent.o \
                              qbluetoothdevicediscoveryagent_bluez.o \
                              qbluetoothlocaldevice_bluez.o \
                              qbluetoothserver.o \
                              qbluetoothserver_bluez.o \
                              qbluetoothservicediscoveryagent.o \
                              qbluetoothservicediscoveryagent_bluez.o \
                              qbluetoothserviceinfo.o \
                              qbluetoothserviceinfo_bluez.o \
                              qbluetoothsocket.o \
                              qbluetoothsocket_bluez.o \
                              qbluetoothsocket_bluezdbus.o \
                              qbluetoothsocketbase.o \
                              qbluetoothtransferreply_bluez.o \
                              qleadvertiser_bluez.o \
                              qlowenergycontroller.o \
                              qlowenergycontroller_bluez.o \
                              qlowenergycontroller_bluezdbus.o \
                              qlowenergycontrollerbase.o \
                              qlowenergyservice.o
QTBLUETOOTH_OBJS_MOC        = $(QTBLUETOOTH_OBJS_MOC_ALL) \
                              adapter_p.omoc \
                              adapter1_bluez5_p.omoc \
                              agent_p.omoc \
                              battery1_p.omoc \
                              bluetoothmanagement_p.omoc \
                              bluez5_helper_p.omoc \
                              device_p.omoc \
                              device1_bluez5_p.omoc \
                              gattchar1_p.omoc \
                              gattdesc1_p.omoc \
                              gattservice1_p.omoc \
                              hcimanager_p.omoc \
                              manager_p.omoc \
                              obex_agent_p.omoc \
                              obex_client_p.omoc \
                              obex_client1_bluez5_p.omoc \
                              obex_manager_p.omoc \
                              obex_objectpush1_bluez5_p.omoc \
                              obex_transfer_p.omoc \
                              obex_transfer1_bluez5_p.omoc \
                              objectmanager_p.omoc \
                              profile1_p.omoc \
                              profile1context_p.omoc \
                              profilemanager1_p.omoc \
                              properties_p.omoc \
                              qbluetoothsocket_bluez_p.omoc \
                              qbluetoothsocket_bluezdbus_p.omoc \
                              qbluetoothtransferreply_bluez_p.omoc \
                              qlowenergycontroller_p.omoc \
                              qlowenergycontroller_bluez_p.omoc \
                              qlowenergycontroller_bluezdbus_p.omoc \
                              qlowenergyserviceprivate_p.omoc \
                              remotedevicemanager_p.omoc \
                              service_p.omoc \
                              servicemap_p.omoc
QTCONCURRENT_OBJS           = $(QTCONCURRENT_OBJS_ALL)
QTCORE_MOCH                 = $(QTCORE_MOCH_ALL) \
                              private/qeventdispatcher_unix_p.cpp \
                              private/qfilesystemwatcher_kqueue_p.cpp \
                              private/qfilesystemwatcher_inotify_p.cpp
QTCORE_MOCC                 = $(QTCORE_MOCC_ALL)
QTCORE_UICH                 = $(QTCORE_UICH_ALL)
QTCORE_RCCH                 = $(QTCORE_RCCH_ALL)
QTCORE_OBJS                 = $(QTCORE_OBJS_ALL) \
                              io/forkfd_qt.o \
                              io/qfilesystemengine_unix.o \
                              io/qfilesystemiterator_unix.o \
                              io/qfilesystemwatcher_inotify.o \
                              io/qfsfileengine_unix.o \
                              io/qlockfile_unix.o \
                              io/qprocess_unix.o \
                              io/qstandardpaths_unix.o \
                              io/qstorageinfo_unix.o \
                              kernel/qcore_unix.o \
                              kernel/qelapsedtimer_unix.o \
                              kernel/qeventdispatcher_unix.o \
                              kernel/qpoll.o \
                              kernel/qsharedmemory_systemv.o \
                              kernel/qsharedmemory_unix.o \
                              kernel/qsystemsemaphore_systemv.o \
                              kernel/qsystemsemaphore_unix.o \
                              kernel/qtimerinfo_unix.o \
                              plugin/qelfparser_p.o \
                              plugin/qlibrary_unix.o \
                              thread/qthread_unix.o \
                              thread/qwaitcondition_unix.o \
                              tools/qcollator_posix.o \
                              tools/qlocale_unix.o \
                              tools/qtimezoneprivate_tz.o
QTCORE_OBJS_MOC             = $(QTCORE_OBJS_MOC_ALL)
QTCORE_OBJS_RCC             = $(QTCORE_OBJS_RCC_ALL)
QTDBUS_MOCH                 = $(QTDBUS_MOCH_ALL) \
                              qdbusabstractinterface.cpp \
                              qdbuspendingcall.cpp \
                              qdbusserver.cpp \
                              qdbusservicewatcher.cpp \
                              private/qdbusconnection_p.cpp \
                              private/qdbusconnectionmanager_p.cpp \
                              private/qdbuspendingcall_p.cpp \
                              qdbusabstractadaptor.cpp \
                              qdbusconnection.cpp \
                              qdbusconnectioninterface.cpp \
                              qdbusservicewatcher.cpp \
                              qdbusvirtualobject.cpp \

QTDBUS_MOCC                 = $(QTDBUS_MOCC_ALL)
QTDBUS_UICH                 = $(QTDBUS_UICH_ALL)
QTDBUS_RCCH                 = $(QTDBUS_RCCH_ALL)
QTDBUS_OBJS                 = $(QTDBUS_OBJS_ALL) \
                              qdbus_symbols.o \
                              qdbusabstractadaptor.o \
                              qdbusabstractinterface.o \
                              qdbusargument.o \
                              qdbusconnection.o \
                              qdbusconnectioninterface.o \
                              qdbuscontext.o \
                              qdbusdemarshaller.o \
                              qdbuserror.o \
                              qdbusextratypes.o \
                              qdbusintegrator.o \
                              qdbusinterface.o \
                              qdbusinternalfilters.o \
                              qdbusintrospection.o \
                              qdbusmarshaller.o \
                              qdbusmessage.o \
                              qdbusmetaobject.o \
                              qdbusmetatype.o \
                              qdbusmisc.o \
                              qdbuspendingcall.o \
                              qdbuspendingreply.o \
                              qdbusreply.o \
                              qdbusserver.o \
                              qdbusservicewatcher.o \
                              qdbusunixfiledescriptor.o \
                              qdbusutil.o \
                              qdbusvirtualobject.o \
                              qdbusxmlgenerator.o \
                              qdbusxmlparser.o
QTDBUS_OBJS_MOC             = $(QTDBUS_OBJS_MOC_ALL) \
                              qdbusabstractadaptor.omoc \
                              qdbusconnection.omoc \
                              qdbusconnection_p.omoc \
                              qdbusconnectioninterface.omoc \
                              qdbusconnectionmanager_p.omoc \
                              qdbuspendingcall_p.omoc \
                              qdbusvirtualobject.omoc \

QTDBUS_OBJS_RCC             = $(QTDBUS_OBJS_RCC_ALL)
QTEVENTDISPATCHERS_MOCH     = $(QTEVENTDISPATCHERS_MOCH_ALL) \
                              private/qunixeventdispatcher_qpa_p.cpp
QTEVENTDISPATCHERS_MOCC     = $(QTEVENTDISPATCHERS_MOCC_ALL)
QTEVENTDISPATCHERS_UICH     = $(QTEVENTDISPATCHERS_UICH_ALL)
QTEVENTDISPATCHERS_RCCH     = $(QTEVENTDISPATCHERS_RCCH_ALL)
QTEVENTDISPATCHERS_OBJS     = $(QTEVENTDISPATCHERS_OBJS_ALL) \
                              qunixeventdispatcher.o
QTEVENTDISPATCHERS_OBJS_MOC = $(QTEVENTDISPATCHERS_OBJS_MOC_ALL)
QTEVENTDISPATCHERS_OBJS_RCC = $(QTEVENTDISPATCHERS_OBJS_RCC_ALL)
QTFONTDATABASES_MOCH        = $(QTFONTDATABASES_MOCH_ALL)
QTFONTDATABASES_MOCC        = $(QTFONTDATABASES_MOCC_ALL)
QTFONTDATABASES_UICH        = $(QTFONTDATABASES_UICH_ALL)
QTFONTDATABASES_RCCH        = $(QTFONTDATABASES_RCCH_ALL)
QTFONTDATABASES_OBJS        = $(QTFONTDATABASES_OBJS_ALL) \
                              fontconfig/qfontconfigdatabase.o \
                              fontconfig/qfontenginemultifontconfig.o
QTFONTDATABASES_OBJS_MOC    = $(QTFONTDATABASES_OBJS_MOC_ALL)
QTFONTDATABASES_OBJS_RCC    = $(QTFONTDATABASES_OBJS_RCC_ALL)
QTGAMEPAD_MOCH              = $(QTGAMEPAD_MOCH_ALL)
QTGAMEPAD_MOCC              = $(QTGAMEPAD_MOCC_ALL)
QTGAMEPAD_OBJS              = $(QTGAMEPAD_OBJS_ALL)
QTGAMEPAD_OBJS_MOC          = $(QTGAMEPAD_OBJS_MOC_ALL)
QTGUI_MOCH                  = $(QTGUI_MOCH_ALL)
QTGUI_MOCC                  = $(QTGUI_MOCC_ALL)
QTGUI_UICH                  = $(QTGUI_UICH_ALL)
QTGUI_RCCH                  = $(QTGUI_RCCH_ALL)
QTGUI_OBJS                  = $(QTGUI_OBJS_ALL)
QTGUI_OBJS_C                = $(QTGUI_OBJS_C_ALL)
QTGUI_OBJS_MOC              = $(QTGUI_OBJS_MOC_ALL)
QTGUI_OBJS_RCC              = $(QTGUI_OBJS_RCC_ALL)
QTMULTIMEDIA_MOCH           = $(QTMULTIMEDIA_MOCH_ALL)
QTMULTIMEDIA_MOCC           = $(QTMULTIMEDIA_MOCC_ALL)
QTMULTIMEDIA_UICH           = $(QTMULTIMEDIA_UICH_ALL)
QTMULTIMEDIA_RCCH           = $(QTMULTIMEDIA_RCCH_ALL)
QTMULTIMEDIA_OBJS           = $(QTMULTIMEDIA_OBJS_ALL)
QTMULTIMEDIA_OBJS_MOC       = $(QTMULTIMEDIA_OBJS_MOC_ALL)
QTMULTIMEDIA_OBJS_RCC       = $(QTMULTIMEDIA_OBJS_RCC_ALL)
QTMULTIMEDIAWIDGETS_MOCH    = $(QTMULTIMEDIAWIDGETS_MOCH_ALL) 
QTMULTIMEDIAWIDGETS_MOCC    = $(QTMULTIMEDIAWIDGETS_MOCC_ALL) 
QTMULTIMEDIAWIDGETS_UICH    = $(QTMULTIMEDIAWIDGETS_UICH_ALL)
QTMULTIMEDIAWIDGETS_RCCH    = $(QTMULTIMEDIAWIDGETS_RCCH_ALL)
QTMULTIMEDIAWIDGETS_OBJS    = $(QTMULTIMEDIAWIDGETS_OBJS_ALL) 
QTMULTIMEDIAWIDGETS_OBJS_MOC= $(QTMULTIMEDIAWIDGETS_OBJS_MOC_ALL)
QTMULTIMEDIAWIDGETS_OBJS_RCC= $(QTMULTIMEDIAWIDGETS_OBJS_RCC_ALL)
QTNETWORK_MOCH              = $(QTNETWORK_MOCH_ALL)
QTNETWORK_MOCC              = $(QTNETWORK_MOCC_ALL)
QTNETWORK_UICH              = $(QTNETWORK_UICH_ALL)
QTNETWORK_RCCH              = $(QTNETWORK_RCCH_ALL)
QTNETWORK_OBJS              = $(QTNETWORK_OBJS_ALL) \
                              kernel/qdnslookup_unix.o \
                              kernel/qhostinfo_unix.o \
                              kernel/qnetworkinterface_unix.o \
                              kernel/qnetworkproxy_generic.o \
                              socket/qlocalserver_unix.o \
                              socket/qlocalsocket_unix.o \
                              socket/qnativesocketengine_unix.o
QTNETWORK_OBJS_MOC          = $(QTNETWORK_OBJS_MOC_ALL)
QTNETWORK_OBJS_RCC          = $(QTNETWORK_OBJS_RCC_ALL)
QTOPENGL_OBJS               = $(QTOPENGL_OBJS_ALL)
QTPLATFORMWINDOWS_MOCH      = $(QTPLATFORMWINDOWS_MOCH_ALL)
QTPLATFORMWINDOWS_MOCC      = $(QTPLATFORMWINDOWS_MOCC_ALL)
QTPLATFORMWINDOWS_UICH      = $(QTPLATFORMWINDOWS_UICH_ALL)
QTPLATFORMWINDOWS_RCCH      = $(QTPLATFORMWINDOWS_RCCH_ALL)
QTPLATFORMWINDOWS_OBJS      = $(QTPLATFORMWINDOWS_OBJS_ALL)
QTPLATFORMWINDOWS_OBJS_MOC  = $(QTPLATFORMWINDOWS_OBJS_MOC_ALL)
QTPLATFORMWINDOWS_OBJS_RCC  = $(QTPLATFORMWINDOWS_OBJS_RCC_ALL)
QTPLATFORMXCB_MOCH          = $(QTPLATFORMXCB_MOCH_ALL) \
                              dbusmenu/qdbusmenuadaptor_p.cpp \
                              dbusmenu/qdbusmenubar_p.cpp \
                              dbusmenu/qdbusmenuconnection_p.cpp \
                              dbusmenu/qdbusmenuregistrarproxy_p.cpp \
                              dbusmenu/qdbusplatformmenu_p.cpp \
                              dbustray/qdbustrayicon_p.cpp \
                              dbustray/qstatusnotifieritemadaptor_p.cpp \
                              dbustray/qxdgnotificationproxy_p.cpp \
                              gl_integrations/qxcbglintegrationplugin.cpp \
                              qxcbclipboard.cpp \
                              qxcbconnection.cpp \
                              qxcbconnection_basic.cpp \
                              qxcbeventdispatcher.cpp \
                              qxcbeventqueue.cpp \
                              qxcbmime.cpp \
                              qxcbnativeinterface.cpp \
                              qxcbsystemtraytracker.cpp
QTPLATFORMXCB_MOCC          = $(QTPLATFORMXCB_MOCC_ALL) \
                              gl_integrations/xcb_egl/qxcbeglmain.moc \
                              gl_integrations/xcb_glx/qxcbglxmain.moc \
                              qxcbclipboard.moc \
                              qxcbmain.moc \
                              qxcbsessionmanager.moc
QTPLATFORMXCB_UICH          = $(QTPLATFORMXCB_UICH_ALL)
QTPLATFORMXCB_RCCH          = $(QTPLATFORMXCB_RCCH_ALL)
QTPLATFORMXCB_OBJS          = $(QTPLATFORMXCB_OBJS_ALL) \
                              dbusmenu/qdbusmenuadaptor.o \
                              dbusmenu/qdbusmenubar.o \
                              dbusmenu/qdbusmenuconnection.o \
                              dbusmenu/qdbusmenuregistrarproxy.o \
                              dbusmenu/qdbusmenutypes.o \
                              dbusmenu/qdbusplatformmenu.o \
                              dbustray/qdbustrayicon.o \
                              dbustray/qdbustraytypes.o \
                              dbustray/qstatusnotifieritemadaptor.o \
                              dbustray/qxdgnotificationproxy.o \
                              gl_integrations/xcb_egl/qxcbeglintegration.o \
                              gl_integrations/xcb_egl/qxcbeglmain.o \
                              gl_integrations/xcb_egl/qxcbeglnativeinterfacehandler.o \
                              gl_integrations/xcb_egl/qxcbeglwindow.o \
                              gl_integrations/xcb_glx/qglxconvenience.o \
                              gl_integrations/xcb_glx/qglxintegration.o \
                              gl_integrations/xcb_glx/qxcbglxintegration.o \
                              gl_integrations/xcb_glx/qxcbglxmain.o \
                              gl_integrations/xcb_glx/qxcbglxnativeinterfacehandler.o \
                              gl_integrations/xcb_glx/qxcbglxwindow.o \
                              gl_integrations/qxcbglintegration.o \
                              gl_integrations/qxcbglintegrationfactory.o \
                              gl_integrations/qxcbnativeinterfacehandler.o \
                              qedidparser.o \
                              qgenericunixservices.o \
                              qgenericunixthemes.o \
                              qxcbatom.o \
                              qxcbbackingstore.o \
                              qxcbclipboard.o \
                              qxcbconnection.o \
                              qxcbconnection_basic.o \
                              qxcbconnection_screens.o \
                              qxcbcursor.o \
                              qxcbdrag.o \
                              qxcbeventdispatcher.o \
                              qxcbeventqueue.o \
                              qxcbimage.o \
                              qxcbintegration.o \
                              qxcbkeyboard.o \
                              qxcbmain.o \
                              qxcbmime.o \
                              qxcbnativeinterface.o \
                              qxcbscreen.o \
                              qxcbsessionmanager.o \
                              qxcbsystemtraytracker.o \
                              qxcbwindow.o \
                              qxcbwmsupport.o \
                              qxcbxsettings.o
QTPLATFORMXCB_OBJS_MOC      = $(QTPLATFORMXCB_OBJS_MOC_ALL) \
                              qdbusmenuadaptor_p.omoc \
                              qdbusmenubar_p.omoc \
                              qdbusmenuconnection_p.omoc \
                              qdbusmenuregistrarproxy_p.omoc \
                              qdbusplatformmenu_p.omoc \
                              qdbustrayicon_p.omoc \
                              qstatusnotifieritemadaptor_p.omoc \
                              qxdgnotificationproxy_p.omoc \
                              qxcbglintegrationplugin.omoc \
                              qxcbclipboard.omoc \
                              qxcbconnection.omoc \
                              qxcbconnection_basic.omoc \
                              qxcbeventdispatcher.omoc \
                              qxcbeventqueue.omoc \
                              qxcbmime.omoc \
                              qxcbnativeinterface.omoc \
                              qxcbsystemtraytracker.omoc
QTPLATFORMXCB_OBJS_RCC      = $(QTPLATFORMXCB_OBJS_RCC_ALL)
QTPLATFORMCOCOA_MOCH        = $(QTPLATFORMCOCOA_MOCH_ALL)
QTPLATFORMCOCOA_MOCC        = $(QTPLATFORMCOCOA_MOCC_ALL)
QTPLATFORMCOCOA_UICH        = $(QTPLATFORMCOCOA_UICH_ALL)
QTPLATFORMCOCOA_RCCH        = $(QTPLATFORMCOCOA_RCCH_ALL)
QTPLATFORMCOCOA_OBJS        = $(QTPLATFORMCOCOA_OBJS_ALL)
QTPLATFORMCOCOA_OBJS_MOC    = $(QTPLATFORMCOCOA_OBJS_MOC_ALL)
QTPLATFORMCOCOA_OBJS_RCC    = $(QTPLATFORMCOCOA_OBJS_RCC_ALL)
QTPRINTSUPPORT_MOCH         = $(QTPRINTSUPPORT_MOCH_ALL)
QTPRINTSUPPORT_MOCC         = $(QTPRINTSUPPORT_MOCC_ALL) \
                              dialogs/qprintdialog_unix.moc
QTPRINTSUPPORT_UICH         = $(QTPRINTSUPPORT_UICH_ALL)
QTPRINTSUPPORT_RCCH         = $(QTPRINTSUPPORT_RCCH_ALL)
QTPRINTSUPPORT_OBJS         = $(QTPRINTSUPPORT_OBJS_ALL) \
                              dialogs/qpagesetupdialog_unix.o \
                              dialogs/qprintdialog_unix.o
QTPRINTSUPPORT_OBJS_MOC     = $(QTPRINTSUPPORT_OBJS_MOC_ALL)
QTPRINTSUPPORT_OBJS_RCC     = $(QTPRINTSUPPORT_OBJS_RCC_ALL)
QTSERIALPORT_MOCH           = $(QTSERIALPORT_MOCH_ALL)
QTSERIALPORT_MOCC           = $(QTSERIALPORT_MOCC_ALL)
QTSERIALPORT_OBJS           = $(QTSERIALPORT_OBJS_ALL) \
                              qserialport_unix.o \
                              qserialportinfo_unix.o
QTSERIALPORT_OBJS_MOC       = $(QTSERIALPORT_OBJS_MOC_ALL)
QTWIDGETS_MOCH              = $(QTWIDGETS_MOCH_ALL)
QTWIDGETS_MOCC              = $(QTWIDGETS_MOCC_ALL)
QTWIDGETS_UICH              = $(QTWIDGETS_UICH_ALL)
QTWIDGETS_RCCH              = $(QTWIDGETS_RCCH_ALL)
QTWIDGETS_OBJS              = $(QTWIDGETS_OBJS_ALL) \
                              util/qsystemtrayicon_x11.o
QTWIDGETS_OBJS_MOC          = $(QTWIDGETS_OBJS_MOC_ALL)
QTWIDGETS_OBJS_RCC          = $(QTWIDGETS_OBJS_RCC_ALL)
QTXML_OBJS                  = $(QTXML_OBJS_ALL)
SINGLEAPPLICATION_MOCH      = $(SINGLEAPPLICATION_MOCH_ALL)
SINGLEAPPLICATION_MOCC      = $(SINGLEAPPLICATION_MOCC_ALL)
SINGLEAPPLICATION_UICH      = $(SINGLEAPPLICATION_UICH_ALL)
SINGLEAPPLICATION_RCCH      = $(SINGLEAPPLICATION_RCCH_ALL)
SINGLEAPPLICATION_OBJS      = $(SINGLEAPPLICATION_OBJS_ALL)
SINGLEAPPLICATION_OBJS_MOC  = $(SINGLEAPPLICATION_OBJS_MOC_ALL)
SINGLEAPPLICATION_OBJS_RCC  = $(SINGLEAPPLICATION_OBJS_RCC_ALL)

#####################################################################################
# Include Targets

include Makefile.targets

all-x86: all-common-x86 \
         fontconfig-x86 \
         qt-dbus-x86 \
         qt-platform-xcb-x86

all-x64: all-common-x64 \
         fontconfig-x64 \
         qt-dbus-x64 \
         qt-platform-xcb-x64

all: all-x86 all-x64
