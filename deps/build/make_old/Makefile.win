#
# WINDOWS CLANG MAKEFILE
#

# prebuilt binary folder
PREBUILTDIR_X86 = ../../prebuilt/win/x86
PREBUILTDIR_X64 = ../../prebuilt/win/x64

# target platforms
TARGET_X86 = i686-pc-windows-msvc
TARGET_X64 = x86_64-pc-windows-msvc

# flags shared between all
FLAGS = -O2 \
        -DWIN32 \
        -D_CRT_SECURE_NO_WARNINGS \
        -D_CRT_NONSTDC_NO_DEPRECATE \
        -D_WINSOCK_DEPRECATED_NO_WARNINGS \
        -D_SILENCE_CXX17_OLD_ALLOCATOR_MEMBERS_DEPRECATION_WARNING \
        -Wno-deprecated-declarations \
        -Wno-incompatible-pointer-types \
        -Wno-ignored-pragma-optimize \
        -Wno-microsoft-cast \
        -Wno-enum-compare-switch \
        -Wno-switch

# Architecture flags
ARCHFLAGS_X86 = -msse -msse2
ARCHFLAGS_X64 = -msse -msse2

# C Compiler
CC_X86       = clang-cl
CC_X64       = clang-cl
CFLAGS_X86   = -MT -TC -m32 --target=$(TARGET_X86) $(ARCHFLAGS_X86) $(FLAGS)
CFLAGS_X64   = -MT -TC -m64 --target=$(TARGET_X64) $(ARCHFLAGS_X64) $(FLAGS)

# C++ Compiler
CXX_X86        = clang++
CXX_X64        = clang++
CXXFLAGS_ALL   = -Xclang -flto-visibility-public-std $(FLAGS)
CXXFLAGS_A_X86 = -m32 -target $(TARGET_X86) $(ARCHFLAGS_X86) $(CXXFLAGS_ALL)
CXXFLAGS_A_X64 = -m64 -target $(TARGET_X64) $(ARCHFLAGS_X64) $(CXXFLAGS_ALL)
CXXFLAGS_X86   = $(CXXFLAGS_A_X86) -std=c++17 
CXXFLAGS_X64   = $(CXXFLAGS_A_X64) -std=c++17 
CXX14FLAGS_X86 = $(CXXFLAGS_A_X86) -std=c++14
CXX14FLAGS_X64 = $(CXXFLAGS_A_X64) -std=c++14

# File Operations
define deletefilepattern
	del /s /q $(subst /,\,$(1))\$(2)
endef

# Platform Specific additional defines
LIBCRYPTO_DEFINES_X86_PLAT          = -DOPENSSL_IA32_SSE2 -DOPENSSL_SYS_WIN32 -DDSO_WIN32 -DWIN32_LEAN_AND_MEAN -DOPENSSLDIR=\".\" -DENGINESDIR=\".\" 
LIBCRYPTO_DEFINES_X64_PLAT          = -DOPENSSL_IA32_SSE2 -DOPENSSL_SYS_WIN64 -DDSO_WIN32 -DWIN32_LEAN_AND_MEAN -DOPENSSLDIR=\".\" -DENGINESDIR=\".\" 
LIBSSL_DEFINES_X86_PLAT             = -DOPENSSL_IA32_SSE2 -DOPENSSL_SYS_WIN32 -DDSO_WIN32 -DWIN32_LEAN_AND_MEAN -DOPENSSL_USE_APPLINK -DOPENSSLDIR=\".\" -DENGINESDIR=\".\" 
LIBSSL_DEFINES_X64_PLAT             = -DOPENSSL_IA32_SSE2 -DOPENSSL_SYS_WIN64 -DDSO_WIN32 -DWIN32_LEAN_AND_MEAN -DOPENSSL_USE_APPLINK -DOPENSSLDIR=\".\" -DENGINESDIR=\".\" 
FONTCONFIG_DEFINES_X86_PLAT         =
FONTCONFIG_DEFINES_X64_PLAT         =
BRAINFLOW_DEFINES_X86_PLAT          = -DWIN32
BRAINFLOW_DEFINES_X64_PLAT          = -DWIN32
OPENCVCORE_DEFINES_X86_PLAT         =
OPENCVCORE_DEFINES_X64_PLAT         =
OPENCVIMGCODECS_DEFINES_X86_PLAT    =
OPENCVIMGCODECS_DEFINES_X64_PLAT    =
OPENCVIMGPROC_DEFINES_X86_PLAT      =
OPENCVIMGPROC_DEFINES_X64_PLAT      =
OPENCVVIDEOIO_DEFINES_X86_PLAT      =
OPENCVVIDEOIO_DEFINES_X64_PLAT      =
QTBOOTSTRAP_DEFINES_X86_PLAT        = -DQT_LARGEFILE_SUPPORT=64
QTBOOTSTRAP_DEFINES_X64_PLAT        = -DQT_LARGEFILE_SUPPORT=64
QTMOC_DEFINES_X86_PLAT              = -DQT_LARGEFILE_SUPPORT=64
QTMOC_DEFINES_X64_PLAT              = -DQT_LARGEFILE_SUPPORT=64
QTRCC_DEFINES_X86_PLAT              = -DQT_LARGEFILE_SUPPORT=64
QTRCC_DEFINES_X64_PLAT              = -DQT_LARGEFILE_SUPPORT=64
QTUIC_DEFINES_X86_PLAT              = -DQT_LARGEFILE_SUPPORT=64
QTUIC_DEFINES_X64_PLAT              = -DQT_LARGEFILE_SUPPORT=64
QTBLUETOOTH_DEFINES_X86_PLAT        = -DQT_LARGEFILE_SUPPORT=64 -DQT_WINRT_BLUETOOTH -DQT_FEATURE_bluez=-1 -DQT_FEATURE_dbus=-1
QTBLUETOOTH_DEFINES_X64_PLAT        = -DQT_LARGEFILE_SUPPORT=64 -DQT_WINRT_BLUETOOTH -DQT_FEATURE_bluez=-1 -DQT_FEATURE_dbus=-1
QTCONCURRENT_DEFINES_X86_PLAT       = -DQT_LARGEFILE_SUPPORT=64
QTCONCURRENT_DEFINES_X64_PLAT       = -DQT_LARGEFILE_SUPPORT=64
QTCORE_DEFINES_X86_PLAT             = -DQT_LARGEFILE_SUPPORT=64 -DQT_FEATURE_dbus=-1
QTCORE_DEFINES_X64_PLAT             = -DQT_LARGEFILE_SUPPORT=64 -DQT_FEATURE_dbus=-1
QTDBUS_DEFINES_X86_PLAT             = -DQT_LARGEFILE_SUPPORT=64
QTDBUS_DEFINES_X64_PLAT             = -DQT_LARGEFILE_SUPPORT=64
QTEVENTDISPATCHERS_DEFINES_X86_PLAT = -DQT_LARGEFILE_SUPPORT=64
QTEVENTDISPATCHERS_DEFINES_X64_PLAT = -DQT_LARGEFILE_SUPPORT=64
QTFONTDATABASES_DEFINES_X86_PLAT    = -DQT_LARGEFILE_SUPPORT=64 -DQT_NO_FONTCONFIG
QTFONTDATABASES_DEFINES_X64_PLAT    = -DQT_LARGEFILE_SUPPORT=64 -DQT_NO_FONTCONFIG
QTGAMEPAD_DEFINES_X86_PLAT          = -DQT_LARGEFILE_SUPPORT=64
QTGAMEPAD_DEFINES_X64_PLAT          = -DQT_LARGEFILE_SUPPORT=64
QTGUI_DEFINES_X86_PLAT              = -DQT_LARGEFILE_SUPPORT=64 -DQT_QPA_DEFAULT_PLATFORM_NAME=\"windows\" -DQT_NO_FONTCONFIG -DQT_FEATURE_dbus=-1
QTGUI_DEFINES_X64_PLAT              = -DQT_LARGEFILE_SUPPORT=64 -DQT_QPA_DEFAULT_PLATFORM_NAME=\"windows\" -DQT_NO_FONTCONFIG -DQT_FEATURE_dbus=-1
QTMULTIMEDIA_DEFINES_X86_PLAT       = -DQT_LARGEFILE_SUPPORT=64
QTMULTIMEDIA_DEFINES_X64_PLAT       = -DQT_LARGEFILE_SUPPORT=64
QTMULTIMEDIAPLUGINS_DEFINES_X86_PLAT= -DQT_LARGEFILE_SUPPORT=64
QTMULTIMEDIAPLUGINS_DEFINES_X64_PLAT= -DQT_LARGEFILE_SUPPORT=64
QTMULTIMEDIAWIDGETS_DEFINES_X86_PLAT= -DQT_LARGEFILE_SUPPORT=64
QTMULTIMEDIAWIDGETS_DEFINES_X64_PLAT= -DQT_LARGEFILE_SUPPORT=64
QTNETWORK_DEFINES_X86_PLAT          = -DQT_LARGEFILE_SUPPORT=64 -DOPENSSLDIR=\".\" -DENGINESDIR=\".\" 
QTNETWORK_DEFINES_X64_PLAT          = -DQT_LARGEFILE_SUPPORT=64 -DOPENSSLDIR=\".\" -DENGINESDIR=\".\" 
QTOPENGL_DEFINES_X86_PLAT           = -DQT_LARGEFILE_SUPPORT=64
QTOPENGL_DEFINES_X64_PLAT           = -DQT_LARGEFILE_SUPPORT=64
QTPLATFORMWINDOWS_DEFINES_X86_PLAT  = -DQT_LARGEFILE_SUPPORT=64 -DQT_QPA_DEFAULT_PLATFORM_NAME=\"windows\" -DQT_NO_FONTCONFIG
QTPLATFORMWINDOWS_DEFINES_X64_PLAT  = -DQT_LARGEFILE_SUPPORT=64 -DQT_QPA_DEFAULT_PLATFORM_NAME=\"windows\" -DQT_NO_FONTCONFIG
QTPLATFORMXCB_DEFINES_X86_PLAT      =
QTPLATFORMXCB_DEFINES_X64_PLAT      =
QTPLATFORMCOCOA_DEFINES_X86_PLAT    =
QTPLATFORMCOCOA_DEFINES_X64_PLAT    =
QTPRINTSUPPORT_DEFINES_X86_PLAT     = -DQT_LARGEFILE_SUPPORT=64
QTPRINTSUPPORT_DEFINES_X64_PLAT     = -DQT_LARGEFILE_SUPPORT=64
QTSERIALPORT_DEFINES_X86_PLAT       = -DQT_LARGEFILE_SUPPORT=64
QTSERIALPORT_DEFINES_X64_PLAT       = -DQT_LARGEFILE_SUPPORT=64
QTWIDGETS_DEFINES_X86_PLAT          = -DQT_LARGEFILE_SUPPORT=64
QTWIDGETS_DEFINES_X64_PLAT          = -DQT_LARGEFILE_SUPPORT=64
QTXML_DEFINES_X86_PLAT              = -DQT_LARGEFILE_SUPPORT=64
QTXML_DEFINES_X64_PLAT              = -DQT_LARGEFILE_SUPPORT=64
SINGLEAPPLICATION_DEFINES_X86_PLAT  =
SINGLEAPPLICATION_DEFINES_X64_PLAT  =

# Platform Specific additional includes
OPENCVCORE_INCLUDES_X86_PLAT         =
OPENCVCORE_INCLUDES_X64_PLAT         =
OPENCVIMGCODECS_INCLUDES_X86_PLAT    =
OPENCVIMGCODECS_INCLUDES_X64_PLAT    =
OPENCVIMGPROC_INCLUDES_X86_PLAT      =
OPENCVIMGPROC_INCLUDES_X64_PLAT      =
OPENCVVIDEOIO_INCLUDES_X86_PLAT      =
OPENCVVIDEOIO_INCLUDES_X64_PLAT      =
QTBOOTSTRAP_INCLUDES_X86_PLAT        = -I../../include/qt/mkspecs/win32-clang-msvc
QTBOOTSTRAP_INCLUDES_X64_PLAT        = -I../../include/qt/mkspecs/win32-clang-msvc
QTMOC_INCLUDES_X86_PLAT              = -I../../include/qt/mkspecs/win32-clang-msvc
QTMOC_INCLUDES_X64_PLAT              = -I../../include/qt/mkspecs/win32-clang-msvc
QTRCC_INCLUDES_X86_PLAT              = -I../../include/qt/mkspecs/win32-clang-msvc
QTRCC_INCLUDES_X64_PLAT              = -I../../include/qt/mkspecs/win32-clang-msvc
QTUIC_INCLUDES_X86_PLAT              = -I../../include/qt/mkspecs/win32-clang-msvc
QTUIC_INCLUDES_X64_PLAT              = -I../../include/qt/mkspecs/win32-clang-msvc
QTBLUETOOTH_INCLUDES_X86_PLAT        = -I../../include/qt/mkspecs/win32-clang-msvc
QTBLUETOOTH_INCLUDES_X64_PLAT        = -I../../include/qt/mkspecs/win32-clang-msvc
QTCONCURRENT_INCLUDES_X86_PLAT       = -I../../include/qt/mkspecs/win32-clang-msvc
QTCONCURRENT_INCLUDES_X64_PLAT       = -I../../include/qt/mkspecs/win32-clang-msvc
QTCORE_INCLUDES_X86_PLAT             = -I../../include/qt/mkspecs/win32-clang-msvc
QTCORE_INCLUDES_X64_PLAT             = -I../../include/qt/mkspecs/win32-clang-msvc
QTDBUS_INCLUDES_X86_PLAT             = -I../../include/qt/mkspecs/win32-clang-msvc
QTDBUS_INCLUDES_X64_PLAT             = -I../../include/qt/mkspecs/win32-clang-msvc
QTEVENTDISPATCHERS_INCLUDES_X86_PLAT = -I../../include/qt/mkspecs/win32-clang-msvc
QTEVENTDISPATCHERS_INCLUDES_X64_PLAT = -I../../include/qt/mkspecs/win32-clang-msvc
QTFONTDATABASES_INCLUDES_X86_PLAT    = -I../../include/qt/mkspecs/win32-clang-msvc
QTFONTDATABASES_INCLUDES_X64_PLAT    = -I../../include/qt/mkspecs/win32-clang-msvc
QTGAMEPAD_INCLUDES_X86_PLAT          = -I../../include/qt/mkspecs/win32-clang-msvc
QTGAMEPAD_INCLUDES_X64_PLAT          = -I../../include/qt/mkspecs/win32-clang-msvc
QTGUI_INCLUDES_X86_PLAT              = -I../../include/qt/mkspecs/win32-clang-msvc
QTGUI_INCLUDES_X64_PLAT              = -I../../include/qt/mkspecs/win32-clang-msvc
QTMULTIMEDIA_INCLUDES_X86_PLAT       = -I../../include/qt/mkspecs/win32-clang-msvc
QTMULTIMEDIA_INCLUDES_X64_PLAT       = -I../../include/qt/mkspecs/win32-clang-msvc
QTMULTIMEDIAPLUGINS_INCLUDES_ALL_PLAT= -I../../include/qt/mkspecs/win32-clang-msvc \
                                       -I../../src/qt-multimediaplugins/common/evr \
                                       -I../../src/qt-multimediaplugins/directshow/camera \
                                       -I../../src/qt-multimediaplugins/directshow/common \
                                       -I../../src/qt-multimediaplugins/directshow/player \
                                       -I../../src/qt-multimediaplugins/directshow \
                                       -I../../src/qt-multimediaplugins/wmf/decoder \
                                       -I../../src/qt-multimediaplugins/wmf/player \
                                       -I../../src/qt-multimediaplugins/wmf
QTMULTIMEDIAPLUGINS_INCLUDES_X86_PLAT= $(QTMULTIMEDIAPLUGINS_INCLUDES_ALL_PLAT)
QTMULTIMEDIAPLUGINS_INCLUDES_X64_PLAT= $(QTMULTIMEDIAPLUGINS_INCLUDES_ALL_PLAT)
QTMULTIMEDIAWIDGETS_INCLUDES_X86_PLAT= -I../../include/qt/mkspecs/win32-clang-msvc
QTMULTIMEDIAWIDGETS_INCLUDES_X64_PLAT= -I../../include/qt/mkspecs/win32-clang-msvc
QTNETWORK_INCLUDES_X86_PLAT          = -I../../include/qt/mkspecs/win32-clang-msvc
QTNETWORK_INCLUDES_X64_PLAT          = -I../../include/qt/mkspecs/win32-clang-msvc
QTOPENGL_INCLUDES_X86_PLAT           = -I../../include/qt/mkspecs/win32-clang-msvc
QTOPENGL_INCLUDES_X64_PLAT           = -I../../include/qt/mkspecs/win32-clang-msvc
QTPLATFORMWINDOWS_INCLUDES_X86_PLAT  = -I../../include/qt/mkspecs/win32-clang-msvc
QTPLATFORMWINDOWS_INCLUDES_X64_PLAT  = -I../../include/qt/mkspecs/win32-clang-msvc
QTPLATFORMXCB_INCLUDES_X86_PLAT      = -I../../include/qt/mkspecs/win32-clang-msvc
QTPLATFORMXCB_INCLUDES_X64_PLAT      = -I../../include/qt/mkspecs/win32-clang-msvc
QTPLATFORMCOCOA_INCLUDES_X86_PLAT    = -I../../include/qt/mkspecs/win32-clang-msvc
QTPLATFORMCOCOA_INCLUDES_X64_PLAT    = -I../../include/qt/mkspecs/win32-clang-msvc
QTPRINTSUPPORT_INCLUDES_X86_PLAT     = -I../../include/qt/mkspecs/win32-clang-msvc
QTPRINTSUPPORT_INCLUDES_X64_PLAT     = -I../../include/qt/mkspecs/win32-clang-msvc
QTSERIALPORT_INCLUDES_X86_PLAT       = -I../../include/qt/mkspecs/win32-clang-msvc
QTSERIALPORT_INCLUDES_X64_PLAT       = -I../../include/qt/mkspecs/win32-clang-msvc
QTWIDGETS_INCLUDES_X86_PLAT          = -I../../include/qt/mkspecs/win32-clang-msvc
QTWIDGETS_INCLUDES_X64_PLAT          = -I../../include/qt/mkspecs/win32-clang-msvc
QTXML_INCLUDES_X86_PLAT              = -I../../include/qt/mkspecs/win32-clang-msvc
QTXML_INCLUDES_X64_PLAT              = -I../../include/qt/mkspecs/win32-clang-msvc
SINGLEAPPLICATION_INCLUDES_X86_PLAT  = -I../../include/qt/mkspecs/win32-clang-msvc
SINGLEAPPLICATION_INCLUDES_X64_PLAT  = -I../../include/qt/mkspecs/win32-clang-msvc

#####################################################################################
# Qt MOC+RCC+UIC

MOC_X86 = bin\x86\qt-moc.exe -DQ_OS_WIN
MOC_X64 = bin\x64\qt-moc.exe -DQ_OS_WIN
ifneq (,$(findstring x86,$(MAKECMDGOALS)))
    MOC = $(MOC_X86)
endif
ifneq (,$(findstring x64,$(MAKECMDGOALS)))
    MOC = $(MOC_X64)
endif

RCC_X86 = bin\x86\qt-rcc.exe
RCC_X64 = bin\x64\qt-rcc.exe
ifneq (,$(findstring x86,$(MAKECMDGOALS)))
    RCC = $(RCC_X86)
endif
ifneq (,$(findstring x64,$(MAKECMDGOALS)))
    RCC = $(RCC_X64)
endif

UIC_X86 = bin\x86\qt-uic.exe
UIC_X64 = bin\x64\qt-uic.exe
ifneq (,$(findstring x86,$(MAKECMDGOALS)))
    UIC = $(UIC_X86)
endif
ifneq (,$(findstring x64,$(MAKECMDGOALS)))
    UIC = $(UIC_X64)
endif

# Platform specific bash file exists check
QTCORE_MOC_CMD_X86 = if exist $(@:$(QTCORE_MOCDIR_X86)/%.moc=$(QTCORE_SRCDIR)/%.cpp) ( $(QTCORE_MOC_C_X86) ) else ( $(QTCORE_MOC_MM_X86) )
QTCORE_MOC_CMD_X64 = if exist $(@:$(QTCORE_MOCDIR_X64)/%.moc=$(QTCORE_SRCDIR)/%.cpp) ( $(QTCORE_MOC_C_X64) ) else ( $(QTCORE_MOC_MM_X64) )

#####################################################################################
# Include Common Makefile
include Makefile.common

# LIB Tool
LIB          = llvm-lib
LIBFLAGS_X86 = /NOLOGO /MACHINE:X86 /LIBPATH:$(LIBDIR_X86)
LIBFLAGS_X64 = /NOLOGO /MACHINE:X64 /LIBPATH:$(LIBDIR_X64)

# LIB Functions
define createlib32
	$(LIB) $(LIBFLAGS_X86) /OUT:"$(LIBDIR_X86)\$(1).lib" $(2)
endef
define createlib64
	$(LIB) $(LIBFLAGS_X64) /OUT:"$(LIBDIR_X64)\$(1).lib" $(2)
endef

#####################################################################################
# Linker
LINK             = lld-link
LINKFLAGS_X86    = -machine:x86 -subsystem:console
LINKFLAGS_X64    = -machine:x64 -subsystem:console
LINKFLAGSDYN_X86 = -DLL
LINKFLAGSDYN_X64 = -DLL

# Visual Studio and Windows SDK Folders
DIRVCTOOLS := $(subst \,/,$(VCToolsInstallDir))
DIRWINSDK  := $(subst \,/,$(WindowsSdkDir))
WINSDKVER  := $(subst \,/,$(WindowsSDKVersion))

# Linker Library Path
LINKPATH_X86 = -libpath:"$(DIRVCTOOLS)lib/x86" \
               -libpath:"$(DIRWINSDK)Lib/$(WINSDKVER)ucrt/x86" \
               -libpath:"$(DIRWINSDK)Lib/$(WINSDKVER)um/x86" \
               -libpath:"$(PREBUILTDIR_X86)" \
               -libpath:"lib/x86"
LINKPATH_X64 = -libpath:"$(DIRVCTOOLS)lib/x64" \
               -libpath:"$(DIRWINSDK)Lib/$(WINSDKVER)ucrt/x64" \
               -libpath:"$(DIRWINSDK)Lib/$(WINSDKVER)um/x64" \
               -libpath:"$(PREBUILTDIR_X64)" \
               -libpath:"lib/x64"

# Libraries for X86 and X64
LINKLIBS_ALL = libucrt.lib libvcruntime.lib libcmt.lib libcpmt.lib \
               legacy_stdio_definitions.lib oldnames.lib legacy_stdio_wide_specifiers.lib \
               kernel32.lib User32.lib Advapi32.lib Netapi32.lib Ole32.lib Shell32.lib

# Libraries for X86 or X64
LINKLIBS_X86 = $(LINKLIBS_ALL)
LINKLIBS_X64 = $(LINKLIBS_ALL)

# Linker Functions
define createbin32
	$(LINK) $(2) -out:$(BINDIR_X86)/$(1).exe $(LINKFLAGS_X86) $(LINKPATH_X86) $(LINKLIBS_X86) $(3)
endef
define createbin64
	$(LINK) $(2) -out:$(BINDIR_X64)/$(1).exe $(LINKFLAGS_X64) $(LINKPATH_X64) $(LINKLIBS_X64) $(3)
endef

# Linker Functions for Shared Library
define createshared32
	$(LINK) $(2) -out:$(LIBDIR_X86)/$(1).dll $(LINKFLAGS_X86) $(LINKFLAGSDYN_X86) $(LINKPATH_X86) $(LINKLIBS_X86) $(3)
endef
define createshared64
	$(LINK) $(2) -out:$(LIBDIR_X64)/$(1).dll $(LINKFLAGS_X64) $(LINKFLAGSDYN_X64) $(LINKPATH_X64) $(LINKLIBS_X64) $(3)
endef

#####################################################################################
# Platform Specific additional objects and libraries
#####################################################################################

# Small libraries
ZLIB_OBJS            = $(ZLIB_OBJS_ALL)
LIBCRYPTO_OBJS       = $(LIBCRYPTO_OBJS_ALL)
LIBSSL_OBJS          = $(LIBSSL_OBJS_ALL) \
                       ms/applink.o
LIBPNG_OBJS          = $(LIBPNG_OBJS_ALL)
LIBJPEG_OBJS         = $(LIBJPEG_OBJS_ALL)
LIBSVM_OBJS          = $(LIBSVM_OBJS_ALL)
PCRE2_OBJS           = $(PCRE2_OBJS_ALL)
DOUBLECONV_OBJS      = $(DOUBLECONV_OBJS_ALL)
EDFLIB_OBJS          = $(EDFLIB_OBJS_ALL)
FONTCONFIG_OBJS      = $(FONTCONFIG_OBJS_ALL)
FREETYPE_OBJS        = $(FREETYPE_OBJS_ALL)
HARFBUZZ_OBJS_C      = $(HARFBUZZ_OBJS_ALL_C)
HARFBUZZ_OBJS_CXX    = $(HARFBUZZ_OBJS_ALL_CXX)
HARFBUZZNG_OBJS      = $(HARFBUZZNG_OBJS_ALL)
KISSFFT_OBJS         = $(KISSFFT_OBJS_ALL)
MINIZIP_OBJS         = $(MINIZIP_OBJS_ALL)
WAVELIB_OBJS         = $(WAVELIB_OBJS_ALL)
DSPFILTERS_OBJS      = $(DSPFILTERS_OBJS_ALL)
BRAINFLOW_OBJS                       = $(BRAINFLOW_OBJS_ALL)
BRAINFLOWBOARDCONTROLLER_OBJS        = $(BRAINFLOWBOARDCONTROLLER_OBJS_ALL)
BRAINFLOWDATAHANDLER_OBJS            = $(BRAINFLOWDATAHANDLER_OBJS_ALL)
BRAINFLOWGANGLIONBGLIB_LIBNAME_X86   = GanglionLib32
BRAINFLOWGANGLIONBGLIB_LIBNAME_X64   = GanglionLib
BRAINFLOWGANGLIONBGLIB_OBJS          = $(BRAINFLOWGANGLIONBGLIB_OBJS_ALL)
BRAINFLOWGANGLIONBGLIB_LIBS_ALL      = 
BRAINFLOWGANGLIONBGLIB_LIBS_X86      = $(LIBDIR_X86)/brainflow.lib \
                                       $(BRAINFLOWGANGLIONBGLIB_LIBS_ALL)
BRAINFLOWGANGLIONBGLIB_LIBS_X64      = $(LIBDIR_X64)/brainflow.lib \
                                       $(BRAINFLOWGANGLIONBGLIB_LIBS_ALL)
BRAINFLOWGFORCESDKCXXWRAPPER_OBJS    = $(BRAINFLOWGFORCESDKCXXWRAPPER_OBJS_ALL) \
                                       wrapper.o
BRAINFLOWGFORCESDKCXXWRAPPER_LIBS_ALL= 
BRAINFLOWGFORCESDKCXXWRAPPER_LIBS_X86= $(PREBUILTDIR_X86)/gforce32.lib \
                                       $(LIBDIR_X86)/brainflow.lib \
                                       $(BRAINFLOWGFORCESDKCXXWRAPPER_LIBS_ALL)
BRAINFLOWGFORCESDKCXXWRAPPER_LIBS_X64= $(PREBUILTDIR_X64)/gforce64.lib \
                                       $(LIBDIR_X64)/brainflow.lib \
                                       $(BRAINFLOWGFORCESDKCXXWRAPPER_LIBS_ALL)
BRAINFLOWML_OBJS                     = $(BRAINFLOWML_OBJS_ALL)
OPENCVCORE_OBJS      = $(OPENCVCORE_OBJS_ALL) \
                       directx.o
OPENCVIMGCODECS_OBJS = $(OPENCVIMGCODECS_OBJS_ALL)
OPENCVIMGPROC_OBJS   = $(OPENCVIMGPROC_OBJS_ALL)
OPENCVVIDEOIO_OBJS   = $(OPENCVVIDEOIO_OBJS_ALL) \
                       cap_dshow.o \
                       cap_msmf.o \
                       cap_vfw.o
OSCPACK_OBJS         = $(OSCPACK_OBJS_ALL)
TINYAES_OBJS         = $(TINYAES_OBJS_ALL)
TINYOBJLOADER_OBJS   = $(TINYOBJLOADER_OBJS_ALL)
TINYXML_OBJS         = $(TINYXML_OBJS_ALL)

# Qt Bootstrap
QTBOOTSTRAP_OBJS = $(QTBOOTSTRAP_OBJS_ALL) \
                   qt-core/global/qoperatingsystemversion_win.o \
                   qt-core/io/qfilesystemengine_win.o \
                   qt-core/io/qfilesystemiterator_win.o \
                   qt-core/io/qfsfileengine_win.o \
                   qt-core/io/qstandardpaths_win.o \
                   qt-core/kernel/qcoreapplication_win.o \
                   qt-core/plugin/qsystemlibrary.o

# Qt Tools
QTMOC_OBJS     = $(QTMOC_OBJS_ALL)
QTMOC_LIBS_X86 = zlib.lib qt-bootstrap.lib
QTMOC_LIBS_X64 = zlib.lib qt-bootstrap.lib
QTRCC_OBJS     = $(QTRCC_OBJS_ALL)
QTRCC_LIBS_X86 = zlib.lib qt-bootstrap.lib
QTRCC_LIBS_X64 = zlib.lib qt-bootstrap.lib
QTUIC_OBJS     = $(QTUIC_OBJS_ALL)
QTUIC_LIBS_X86 = zlib.lib qt-bootstrap.lib
QTUIC_LIBS_X64 = zlib.lib qt-bootstrap.lib

# Qt Libraries
QTBLUETOOTH_MOCH            = $(QTBLUETOOTH_MOCH_ALL) \
                              private/qbluetoothdevicediscoveryagent_p.cpp \
                              private/qbluetoothservicediscoveryagent_p.cpp \
                              private/qbluetoothserviceinfo_p.cpp \
                              private/qbluetoothsocket_winrt_p.cpp \
                              private/qbluetoothsocketbase_p.cpp \
                              private/qlowenergycontroller_p.cpp \
                              private/qlowenergycontroller_winrt_p.cpp \
                              private/qlowenergyserviceprivate_p.cpp
QTBLUETOOTH_MOCC            = $(QTBLUETOOTH_MOCC_ALL) \
                              qbluetoothdevicediscoveryagent_winrt.moc \
                              qbluetoothservicediscoveryagent_winrt.moc \
                              qbluetoothsocket_winrt.moc \
                              qlowenergycontroller_winrt.moc
QTBLUETOOTH_OBJS            = $(QTBLUETOOTH_OBJS_ALL) \
                              qbluetoothdevicediscoveryagent.o \
                              qbluetoothdevicediscoveryagent_winrt.o \
                              qbluetoothlocaldevice_p.o \
                              qbluetoothserver.o \
                              qbluetoothserver_winrt.o \
                              qbluetoothservicediscoveryagent.o \
                              qbluetoothservicediscoveryagent_winrt.o \
                              qbluetoothserviceinfo.o \
                              qbluetoothserviceinfo_winrt.o \
                              qbluetoothsocket.o \
                              qbluetoothsocket_winrt.o \
                              qbluetoothsocketbase.o \
                              qbluetoothutils_win.o \
                              qlowenergycontroller.o \
                              qlowenergycontroller_winrt.o \
                              qlowenergycontrollerbase.o \
                              qlowenergyservice.o
QTBLUETOOTH_OBJS_MOC        = $(QTBLUETOOTH_OBJS_MOC_ALL) \
                              qbluetoothdevicediscoveryagent_p.omoc \
                              qbluetoothservicediscoveryagent_p.omoc \
                              qbluetoothsocket_winrt_p.omoc \
                              qbluetoothsocketbase_p.omoc \
                              qbluetoothserviceinfo_p.omoc \
                              qlowenergycontroller_p.omoc \
                              qlowenergycontroller_winrt_p.omoc \
                              qlowenergyserviceprivate_p.omoc
QTCONCURRENT_OBJS           = $(QTCONCURRENT_OBJS_ALL)
QTCORE_MOCH                 = $(QTCORE_MOCH_ALL) \
                              private/qeventdispatcher_win_p.cpp \
                              private/qfilesystemwatcher_win_p.cpp \
                              private/qwindowspipereader_p.cpp \
                              private/qwindowspipewriter_p.cpp \
                              qwineventnotifier.cpp
QTCORE_MOCC                 = $(QTCORE_MOCC_ALL) \
                              io/qfilesystemwatcher_win.moc
QTCORE_UICH                 = $(QTCORE_UICH_ALL)
QTCORE_RCCH                 = $(QTCORE_RCCH_ALL)
QTCORE_OBJS                 = $(QTCORE_OBJS_ALL) \
                              codecs/qwindowscodec.o \
                              global/qoperatingsystemversion_win.o \
                              io/qfilesystemengine_win.o \
                              io/qfilesystemiterator_win.o \
                              io/qfilesystemwatcher_win.o \
                              io/qfsfileengine_win.o \
                              io/qlockfile_win.o \
                              io/qprocess_win.o \
                              io/qsettings_win.o \
                              io/qstandardpaths_win.o \
                              io/qstorageinfo_win.o \
                              io/qwindowspipereader.o \
                              io/qwindowspipewriter.o \
                              kernel/qcoreapplication_win.o \
                              kernel/qelapsedtimer_win.o \
                              kernel/qeventdispatcher_win.o \
                              kernel/qsharedmemory_win.o \
                              kernel/qsystemsemaphore_win.o \
                              kernel/qwineventnotifier.o \
                              plugin/qlibrary_win.o \
                              plugin/qsystemlibrary.o \
                              thread/qthread_win.o \
                              thread/qwaitcondition_win.o \
                              tools/qcollator_win.o \
                              tools/qlocale_win.o \
                              tools/qtimezoneprivate_win.o
QTCORE_OBJS_MOC             = $(QTCORE_OBJS_MOC_ALL) \
                              qeventdispatcher_win_p.omoc \
                              qfilesystemwatcher_win_p.omoc \
                              qwindowspipereader_p.omoc \
                              qwindowspipewriter_p.omoc \
                              qwineventnotifier.omoc
QTCORE_OBJS_RCC             = $(QTCORE_OBJS_RCC_ALL)
QTDBUS_MOCH                 = $(QTDBUS_MOCH_ALL)
QTDBUS_MOCC                 = $(QTDBUS_MOCC_ALL)
QTDBUS_UICH                 = $(QTDBUS_UICH_ALL)
QTDBUS_RCCH                 = $(QTDBUS_RCCH_ALL)
QTDBUS_OBJS                 = $(QTDBUS_OBJS_ALL)
QTDBUS_OBJS_MOC             = $(QTDBUS_OBJS_MOC_ALL)
QTDBUS_OBJS_RCC             = $(QTDBUS_OBJS_RCC_ALL)
QTEVENTDISPATCHERS_MOCH     = $(QTEVENTDISPATCHERS_MOCH_ALL) \
                              private/qwindowsguieventdispatcher_p.cpp
QTEVENTDISPATCHERS_MOCC     = $(QTEVENTDISPATCHERS_MOCC_ALL)
QTEVENTDISPATCHERS_UICH     = $(QTEVENTDISPATCHERS_UICH_ALL)
QTEVENTDISPATCHERS_RCCH     = $(QTEVENTDISPATCHERS_RCCH_ALL)
QTEVENTDISPATCHERS_OBJS     = $(QTEVENTDISPATCHERS_OBJS_ALL) \
                              qwindowsguieventdispatcher.o
QTEVENTDISPATCHERS_OBJS_MOC = $(QTEVENTDISPATCHERS_OBJS_MOC_ALL) \
                              qwindowsguieventdispatcher_p.omoc
QTEVENTDISPATCHERS_OBJS_RCC = $(QTEVENTDISPATCHERS_OBJS_RCC_ALL)
QTFONTDATABASES_MOCH        = $(QTFONTDATABASES_MOCH_ALL)
QTFONTDATABASES_MOCC        = $(QTFONTDATABASES_MOCC_ALL)
QTFONTDATABASES_UICH        = $(QTFONTDATABASES_UICH_ALL)
QTFONTDATABASES_RCCH        = $(QTFONTDATABASES_RCCH_ALL)
QTFONTDATABASES_OBJS        = $(QTFONTDATABASES_OBJS_ALL) \
                              windows/qwindowsfontdatabase.o \
                              windows/qwindowsfontdatabase_ft.o \
                              windows/qwindowsfontengine.o \
                              windows/qwindowsfontenginedirectwrite.o \
                              windows/qwindowsnativeimage.o
QTFONTDATABASES_OBJS_MOC    = $(QTFONTDATABASES_OBJS_MOC_ALL)
QTFONTDATABASES_OBJS_RCC    = $(QTFONTDATABASES_OBJS_RCC_ALL)
QTGAMEPAD_MOCH              = $(QTGAMEPAD_MOCH_ALL)
QTGAMEPAD_MOCC              = $(QTGAMEPAD_MOCC_ALL)
QTGAMEPAD_OBJS              = $(QTGAMEPAD_OBJS_ALL)
QTGAMEPAD_OBJS_MOC          = $(QTGAMEPAD_OBJS_MOC_ALL)
QTGUI_MOCH                  = $(QTGUI_MOCH_ALL)
QTGUI_MOCC                  = $(QTGUI_MOCC_ALL)
QTGUI_UICH                  = $(QTGUI_UICH_ALL)
QTGUI_RCCH                  = $(QTGUI_RCCH_ALL)
QTGUI_OBJS                  = $(QTGUI_OBJS_ALL) \
                              image/qpixmap_win.o \
                              opengl/qopenglfunctions_1_0.o \
                              opengl/qopenglfunctions_1_1.o \
                              opengl/qopenglfunctions_1_2.o \
                              opengl/qopenglfunctions_1_3.o \
                              opengl/qopenglfunctions_1_4.o \
                              opengl/qopenglfunctions_1_5.o \
                              opengl/qopenglfunctions_2_0.o \
                              opengl/qopenglfunctions_2_1.o \
                              opengl/qopenglfunctions_3_0.o \
                              opengl/qopenglfunctions_3_1.o \
                              opengl/qopenglfunctions_3_2_compatibility.o \
                              opengl/qopenglfunctions_3_2_core.o \
                              opengl/qopenglfunctions_3_3_compatibility.o \
                              opengl/qopenglfunctions_3_3_core.o \
                              opengl/qopenglfunctions_4_0_compatibility.o \
                              opengl/qopenglfunctions_4_0_core.o \
                              opengl/qopenglfunctions_4_1_compatibility.o \
                              opengl/qopenglfunctions_4_1_core.o \
                              opengl/qopenglfunctions_4_2_compatibility.o \
                              opengl/qopenglfunctions_4_2_core.o \
                              opengl/qopenglfunctions_4_3_compatibility.o \
                              opengl/qopenglfunctions_4_3_core.o \
                              opengl/qopenglfunctions_4_4_compatibility.o \
                              opengl/qopenglfunctions_4_4_core.o \
                              opengl/qopenglfunctions_4_5_compatibility.o \
                              opengl/qopenglfunctions_4_5_core.o
QTGUI_OBJS_C                = $(QTGUI_OBJS_C_ALL)
QTGUI_OBJS_MOC              = $(QTGUI_OBJS_MOC_ALL)
QTGUI_OBJS_RCC              = $(QTGUI_OBJS_RCC_ALL)
QTMULTIMEDIA_MOCH           = $(QTMULTIMEDIA_MOCH_ALL)
QTMULTIMEDIA_MOCC           = $(QTMULTIMEDIA_MOCC_ALL)
QTMULTIMEDIA_UICH           = $(QTMULTIMEDIA_UICH_ALL)
QTMULTIMEDIA_RCCH           = $(QTMULTIMEDIA_RCCH_ALL)
QTMULTIMEDIA_OBJS           = $(QTMULTIMEDIA_OBJS_ALL)
QTMULTIMEDIA_OBJS_MOC       = $(QTMULTIMEDIA_OBJS_MOC_ALL)
QTMULTIMEDIA_OBJS_RCC       = $(QTMULTIMEDIA_OBJS_RCC_ALL)
QTMULTIMEDIAPLUGINS_MOCH    = $(QTMULTIMEDIAPLUGINS_MOCH_ALL) \
                              common/evr/evrvideowindowcontrol.cpp \
                              wmf/decoder/mfaudiodecodercontrol.cpp \
                              wmf/decoder/mfdecoderservice.cpp \
                              wmf/decoder/mfdecodersourcereader.cpp \
                              wmf/player/mfaudioendpointcontrol.cpp \
                              wmf/player/mfaudioprobecontrol.cpp \
                              wmf/player/mfmetadatacontrol.cpp \
                              wmf/player/mfplayercontrol.cpp \
                              wmf/player/mfplayerservice.cpp \
                              wmf/player/mfplayersession.cpp \
                              wmf/player/mfvideoprobecontrol.cpp \
                              wmf/player/mfvideorenderercontrol.cpp \
                              wmf/wmfserviceplugin.cpp \
                              wmf/sourceresolver.cpp \
                              wmf/mfstream.cpp \
                              directshow/camera/directshowcameracapturebufferformatcontrol.cpp \
                              directshow/camera/directshowcameracapturedestinationcontrol.cpp \
                              directshow/camera/directshowcameraexposurecontrol.cpp \
                              directshow/camera/directshowcameraimageencodercontrol.cpp \
                              directshow/camera/directshowcamerazoomcontrol.cpp \
                              directshow/camera/dscameracontrol.cpp \
                              directshow/camera/dscameraimageprocessingcontrol.cpp \
                              directshow/camera/dscameraservice.cpp \
                              directshow/camera/dscamerasession.cpp \
                              directshow/camera/dsimagecapturecontrol.cpp \
                              directshow/camera/dsvideodevicecontrol.cpp \
                              directshow/camera/dsvideorenderer.cpp \
                              directshow/common/directshowaudioprobecontrol.cpp \
                              directshow/common/directshoweventloop.cpp \
                              directshow/common/directshowsamplegrabber.cpp \
                              directshow/common/directshowvideoprobecontrol.cpp \
                              directshow/player/directshowaudioendpointcontrol.cpp \
                              directshow/player/directshowevrvideowindowcontrol.cpp \
                              directshow/player/directshowioreader.cpp \
                              directshow/player/directshowmetadatacontrol.cpp \
                              directshow/player/directshowplayercontrol.cpp \
                              directshow/player/directshowplayerservice.cpp \
                              directshow/player/directshowvideorenderercontrol.cpp \
                              directshow/player/videosurfacefilter.cpp \
                              directshow/player/vmr9videowindowcontrol.cpp \
                              directshow/dsserviceplugin.cpp
QTMULTIMEDIAPLUGINS_MOCC    = $(QTMULTIMEDIAPLUGINS_MOCC_ALL) \
                              wmf/player/mfvideorenderercontrol.moc
QTMULTIMEDIAPLUGINS_UICH    = $(QTMULTIMEDIAPLUGINS_UICH_ALL)
QTMULTIMEDIAPLUGINS_RCCH    = $(QTMULTIMEDIAPLUGINS_RCCH_ALL)
QTMULTIMEDIAPLUGINS_OBJS    = $(QTMULTIMEDIAPLUGINS_OBJS_ALL) \
                              common/evr/evrcustompresenter.o \
                              common/evr/evrd3dpresentengine.o \
                              common/evr/evrdefs.o \
                              common/evr/evrhelpers.o \
                              common/evr/evrvideowindowcontrol.o \
                              directshow/camera/directshowcameracapturebufferformatcontrol.o \
                              directshow/camera/directshowcameracapturedestinationcontrol.o \
                              directshow/camera/directshowcameraexposurecontrol.o \
                              directshow/camera/directshowcameraimageencodercontrol.o \
                              directshow/camera/directshowcamerazoomcontrol.o \
                              directshow/camera/dscameracontrol.o \
                              directshow/camera/dscameraimageprocessingcontrol.o \
                              directshow/camera/dscameraservice.o \
                              directshow/camera/dscamerasession.o \
                              directshow/camera/dscameraviewfindersettingscontrol.o \
                              directshow/camera/dsimagecapturecontrol.o \
                              directshow/camera/dsvideodevicecontrol.o \
                              directshow/camera/dsvideorenderer.o \
                              directshow/common/directshowaudioprobecontrol.o \
                              directshow/common/directshowbasefilter.o \
                              directshow/common/directshoweventloop.o \
                              directshow/common/directshowmediatype.o \
                              directshow/common/directshowmediatypeenum.o \
                              directshow/common/directshowpin.o \
                              directshow/common/directshowpinenum.o \
                              directshow/common/directshowsamplegrabber.o \
                              directshow/common/directshowutils.o \
                              directshow/common/directshowvideobuffer.o \
                              directshow/common/directshowvideoprobecontrol.o \
                              directshow/player/directshowaudioendpointcontrol.o \
                              directshow/player/directshowevrvideowindowcontrol.o \
                              directshow/player/directshowioreader.o \
                              directshow/player/directshowiosource.o \
                              directshow/player/directshowmetadatacontrol.o \
                              directshow/player/directshowplayercontrol.o \
                              directshow/player/directshowplayerservice.o \
                              directshow/player/directshowvideorenderercontrol.o \
                              directshow/player/videosurfacefilter.o \
                              directshow/player/vmr9videowindowcontrol.o \
                              directshow/dsserviceplugin.o \
                              wmf/decoder/mfaudiodecodercontrol.o \
                              wmf/decoder/mfdecoderservice.o \
                              wmf/decoder/mfdecodersourcereader.o \
                              wmf/player/mfactivate.o \
                              wmf/player/mfaudioendpointcontrol.o \
                              wmf/player/mfaudioprobecontrol.o \
                              wmf/player/mfevrvideowindowcontrol.o \
                              wmf/player/mfmetadatacontrol.o \
                              wmf/player/mfplayercontrol.o \
                              wmf/player/mfplayerservice.o \
                              wmf/player/mfplayersession.o \
                              wmf/player/mftvideo.o \
                              wmf/player/mfvideoprobecontrol.o \
                              wmf/player/mfvideorenderercontrol.o \
                              wmf/player/samplegrabber.o \
                              wmf/mfstream.o \
                              wmf/sourceresolver.o \
                              wmf/wmfserviceplugin.o
QTMULTIMEDIAPLUGINS_OBJS_MOC= $(QTMULTIMEDIAPLUGINS_OBJS_MOC_ALL) \
                              evrvideowindowcontrol.omoc \
                              mfaudiodecodercontrol.omoc \
                              mfdecoderservice.omoc \
                              mfdecodersourcereader.omoc \
                              mfaudioendpointcontrol.omoc \
                              mfaudioprobecontrol.omoc \
                              mfmetadatacontrol.omoc \
                              mfplayercontrol.omoc \
                              mfplayerservice.omoc \
                              mfplayersession.omoc \
                              mfvideoprobecontrol.omoc \
                              wmfserviceplugin.omoc \
                              sourceresolver.omoc \
                              mfstream.omoc \
                              directshowcameracapturebufferformatcontrol.omoc \
                              directshowcameracapturedestinationcontrol.omoc \
                              directshowcameraexposurecontrol.omoc \
                              directshowcameraimageencodercontrol.omoc \
                              directshowcamerazoomcontrol.omoc \
                              dscameracontrol.omoc \
                              dscameraimageprocessingcontrol.omoc \
                              dscameraservice.omoc \
                              dscamerasession.omoc \
                              dsimagecapturecontrol.omoc \
                              dsvideodevicecontrol.omoc \
                              dsvideorenderer.omoc \
                              directshowaudioprobecontrol.omoc \
                              directshoweventloop.omoc \
                              directshowsamplegrabber.omoc \
                              directshowvideoprobecontrol.omoc \
                              directshowaudioendpointcontrol.omoc \
                              directshowevrvideowindowcontrol.omoc \
                              directshowioreader.omoc \
                              directshowmetadatacontrol.omoc \
                              directshowplayercontrol.omoc \
                              directshowplayerservice.omoc \
                              directshowvideorenderercontrol.omoc \
                              videosurfacefilter.omoc \
                              vmr9videowindowcontrol.omoc \
                              dsserviceplugin.omoc
QTMULTIMEDIAPLUGINS_OBJS_RCC= $(QTMULTIMEDIAPLUGINS_OBJS_RCC_ALL)
QTMULTIMEDIAWIDGETS_MOCH    = $(QTMULTIMEDIAWIDGETS_MOCH_ALL) 
QTMULTIMEDIAWIDGETS_MOCC    = $(QTMULTIMEDIAWIDGETS_MOCC_ALL) 
QTMULTIMEDIAWIDGETS_UICH    = $(QTMULTIMEDIAWIDGETS_UICH_ALL)
QTMULTIMEDIAWIDGETS_RCCH    = $(QTMULTIMEDIAWIDGETS_RCCH_ALL)
QTMULTIMEDIAWIDGETS_OBJS    = $(QTMULTIMEDIAWIDGETS_OBJS_ALL) 
QTMULTIMEDIAWIDGETS_OBJS_MOC= $(QTMULTIMEDIAWIDGETS_OBJS_MOC_ALL)
QTMULTIMEDIAWIDGETS_OBJS_RCC= $(QTMULTIMEDIAWIDGETS_OBJS_RCC_ALL)
QTNETWORK_MOCH              = $(QTNETWORK_MOCH_ALL)
QTNETWORK_MOCC              = $(QTNETWORK_MOCC_ALL)
QTNETWORK_UICH              = $(QTNETWORK_UICH_ALL)
QTNETWORK_RCCH              = $(QTNETWORK_RCCH_ALL)
QTNETWORK_OBJS              = $(QTNETWORK_OBJS_ALL) \
                              kernel/qdnslookup_win.o \
                              kernel/qhostinfo_win.o \
                              kernel/qnetworkinterface_win.o \
                              kernel/qnetworkproxy_win.o \
                              socket/qlocalserver_win.o \
                              socket/qlocalsocket_win.o \
                              socket/qnativesocketengine_win.o \
                              ssl/qwindowscarootfetcher.o
QTNETWORK_OBJS_MOC          = $(QTNETWORK_OBJS_MOC_ALL) \
                              qwindowscarootfetcher_p.omoc
QTNETWORK_OBJS_RCC          = $(QTNETWORK_OBJS_RCC_ALL)
QTOPENGL_MOCH               = $(QTOPENGL_MOCH_ALL)
QTOPENGL_MOCC               = $(QTOPENGL_MOCC_ALL)
QTOPENGL_UICH               = $(QTOPENGL_UICH_ALL)
QTOPENGL_RCCH               = $(QTOPENGL_RCCH_ALL)
QTOPENGL_OBJS               = $(QTOPENGL_OBJS_ALL)
QTOPENGL_OBJS_MOC           = $(QTOPENGL_OBJS_MOC_ALL)
QTOPENGL_OBJS_RCC           = $(QTOPENGL_OBJS_RCC_ALL)
QTPLATFORMWINDOWS_MOCH      = $(QTPLATFORMWINDOWS_MOCH_ALL) \
                              qwindowsgdinativeinterface.cpp \
                              qwindowsinputcontext.cpp \
                              qwindowsmenu.cpp \
                              qwindowsnativeinterface.cpp \
                              uiautomation/qwindowsuiabaseprovider.cpp \
                              uiautomation/qwindowsuiamainprovider.cpp \
                              uiautomation/qwindowsuiaprovidercache.cpp
QTPLATFORMWINDOWS_MOCC      = $(QTPLATFORMWINDOWS_MOCC_ALL) \
                              main.moc \
                              qwindowsdialoghelpers.moc
QTPLATFORMWINDOWS_UICH      = $(QTPLATFORMWINDOWS_UICH_ALL)
QTPLATFORMWINDOWS_RCCH      = $(QTPLATFORMWINDOWS_RCCH_ALL) \
                              cursors.cpp \
                              openglblacklists.cpp
QTPLATFORMWINDOWS_OBJS      = $(QTPLATFORMWINDOWS_OBJS_ALL) \
                              uiautomation/qwindowsuiaaccessibility.o \
                              uiautomation/qwindowsuiabaseprovider.o \
                              uiautomation/qwindowsuiagriditemprovider.o \
                              uiautomation/qwindowsuiagridprovider.o \
                              uiautomation/qwindowsuiainvokeprovider.o \
                              uiautomation/qwindowsuiamainprovider.o \
                              uiautomation/qwindowsuiaprovidercache.o \
                              uiautomation/qwindowsuiarangevalueprovider.o \
                              uiautomation/qwindowsuiaselectionitemprovider.o \
                              uiautomation/qwindowsuiaselectionprovider.o \
                              uiautomation/qwindowsuiatableitemprovider.o \
                              uiautomation/qwindowsuiatableprovider.o \
                              uiautomation/qwindowsuiatextprovider.o \
                              uiautomation/qwindowsuiatextrangeprovider.o \
                              uiautomation/qwindowsuiatoggleprovider.o \
                              uiautomation/qwindowsuiautils.o \
                              uiautomation/qwindowsuiavalueprovider.o \
                              uiautomation/qwindowsuiawindowprovider.o \
                              uiautomation/qwindowsuiawrapper.o \
                              main.o \
                              qabstractfileiconengine.o \
                              qwin10helpers.o \
                              qwindowsbackingstore.o \
                              qwindowsclipboard.o \
                              qwindowscontext.o \
                              qwindowscursor.o \
                              qwindowsdialoghelpers.o \
                              qwindowsdrag.o \
                              qwindowsdropdataobject.o \
                              qwindowseglcontext.o \
                              qwindowsgdiintegration.o \
                              qwindowsgdinativeinterface.o \
                              qwindowsglcontext.o \
                              qwindowsinputcontext.o \
                              qwindowsintegration.o \
                              qwindowsinternalmimedata.o \
                              qwindowskeymapper.o \
                              qwindowsmenu.o \
                              qwindowsmime.o \
                              qwindowsmousehandler.o \
                              qwindowsnativeinterface.o \
                              qwindowsole.o \
                              qwindowsopengltester.o \
                              qwindowspointerhandler.o \
                              qwindowsscreen.o \
                              qwindowsservices.o \
                              qwindowssessionmanager.o \
                              qwindowssystemtrayicon.o \
                              qwindowstabletsupport.o \
                              qwindowstheme.o \
                              qwindowswindow.o
QTPLATFORMWINDOWS_OBJS_MOC  = $(QTPLATFORMWINDOWS_OBJS_MOC_ALL) \
                              qwindowsgdinativeinterface.omoc \
                              qwindowsinputcontext.omoc \
                              qwindowsmenu.omoc \
                              qwindowsnativeinterface.omoc \
                              qwindowsuiabaseprovider.omoc \
                              qwindowsuiamainprovider.omoc \
                              qwindowsuiaprovidercache.omoc
QTPLATFORMWINDOWS_OBJS_RCC  = $(QTPLATFORMWINDOWS_OBJS_RCC_ALL) \
                              cursors.orcc \
                              openglblacklists.orcc
QTPLATFORMXCB_MOCH          = $(QTPLATFORMXCB_MOCH_ALL)
QTPLATFORMXCB_MOCC          = $(QTPLATFORMXCB_MOCC_ALL)
QTPLATFORMXCB_UICH          = $(QTPLATFORMXCB_UICH_ALL)
QTPLATFORMXCB_RCCH          = $(QTPLATFORMXCB_RCCH_ALL)
QTPLATFORMXCB_OBJS          = $(QTPLATFORMXCB_OBJS_ALL)
QTPLATFORMXCB_OBJS_MOC      = $(QTPLATFORMXCB_OBJS_MOC_ALL)
QTPLATFORMXCB_OBJS_RCC      = $(QTPLATFORMXCB_OBJS_RCC_ALL)
QTPLATFORMCOCOA_MOCH        = $(QTPLATFORMCOCOA_MOCH_ALL)
QTPLATFORMCOCOA_MOCC        = $(QTPLATFORMCOCOA_MOCC_ALL)
QTPLATFORMCOCOA_UICH        = $(QTPLATFORMCOCOA_UICH_ALL)
QTPLATFORMCOCOA_RCCH        = $(QTPLATFORMCOCOA_RCCH_ALL)
QTPLATFORMCOCOA_OBJS        = $(QTPLATFORMCOCOA_OBJS_ALL)
QTPLATFORMCOCOA_OBJS_MOC    = $(QTPLATFORMCOCOA_OBJS_MOC_ALL)
QTPLATFORMCOCOA_OBJS_RCC    = $(QTPLATFORMCOCOA_OBJS_RCC_ALL)
QTPRINTSUPPORT_MOCH         = $(QTPRINTSUPPORT_MOCH_ALL)
QTPRINTSUPPORT_MOCC         = $(QTPRINTSUPPORT_MOCC_ALL)
QTPRINTSUPPORT_UICH         = $(QTPRINTSUPPORT_UICH_ALL)
QTPRINTSUPPORT_RCCH         = $(QTPRINTSUPPORT_RCCH_ALL)
QTPRINTSUPPORT_OBJS         = $(QTPRINTSUPPORT_OBJS_ALL) \
                              dialogs/qpagesetupdialog_win.o \
                              dialogs/qprintdialog_win.o \
                              kernel/qprintengine_win.o
QTPRINTSUPPORT_OBJS_MOC     = $(QTPRINTSUPPORT_OBJS_MOC_ALL)
QTPRINTSUPPORT_OBJS_RCC     = $(QTPRINTSUPPORT_OBJS_RCC_ALL)
QTSERIALPORT_MOCH           = $(QTSERIALPORT_MOCH_ALL) \
                              private/qwinoverlappedionotifier_p.cpp
QTSERIALPORT_MOCC           = $(QTSERIALPORT_MOCC_ALL)
QTSERIALPORT_OBJS           = $(QTSERIALPORT_OBJS_ALL) \
                              qserialport_win.o \
                              qserialportinfo_win.o \
                              qwinoverlappedionotifier.o
QTSERIALPORT_OBJS_MOC       = $(QTSERIALPORT_OBJS_MOC_ALL)
QTWIDGETS_MOCH              = $(QTWIDGETS_MOCH_ALL)
QTWIDGETS_MOCC              = $(QTWIDGETS_MOCC_ALL)
QTWIDGETS_UICH              = $(QTWIDGETS_UICH_ALL)
QTWIDGETS_RCCH              = $(QTWIDGETS_RCCH_ALL)
QTWIDGETS_OBJS              = $(QTWIDGETS_OBJS_ALL) \
                              dialogs/qwizard.o \
                              dialogs/qwizard_win.o
QTWIDGETS_OBJS_MOC          = $(QTWIDGETS_OBJS_MOC_ALL)
QTWIDGETS_OBJS_RCC          = $(QTWIDGETS_OBJS_RCC_ALL)
QTXML_OBJS                  = $(QTXML_OBJS_ALL)
SINGLEAPPLICATION_MOCH      = $(SINGLEAPPLICATION_MOCH_ALL)
SINGLEAPPLICATION_MOCC      = $(SINGLEAPPLICATION_MOCC_ALL)
SINGLEAPPLICATION_UICH      = $(SINGLEAPPLICATION_UICH_ALL)
SINGLEAPPLICATION_RCCH      = $(SINGLEAPPLICATION_RCCH_ALL)
SINGLEAPPLICATION_OBJS      = $(SINGLEAPPLICATION_OBJS_ALL)
SINGLEAPPLICATION_OBJS_MOC  = $(SINGLEAPPLICATION_OBJS_MOC_ALL)
SINGLEAPPLICATION_OBJS_RCC  = $(SINGLEAPPLICATION_OBJS_RCC_ALL)

#####################################################################################
# Project Dependencies

QTBLUETOOTH_DEPS_X86         = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTBLUETOOTH_DEPS_X64         = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTCORE_DEPS_X86              = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTCORE_DEPS_X64              = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTDBUS_DEPS_X86              = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTDBUS_DEPS_X64              = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTEVENTDISPATCHERS_DEPS_X86  = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTEVENTDISPATCHERS_DEPS_X64  = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTFONTDATABASES_DEPS_X86     = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTFONTDATABASES_DEPS_X64     = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTGAMEPAD_DEPS_X86           = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTGAMEPAD_DEPS_X64           = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTGUI_DEPS_X86               = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTGUI_DEPS_X64               = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTMULTIMEDIA_DEPS_X86        = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTMULTIMEDIA_DEPS_X64        = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTMULTIMEDIAPLUGINS_DEPS_X86 = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTMULTIMEDIAPLUGINS_DEPS_X64 = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTMULTIMEDIAWIDGETS_DEPS_X86 = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTMULTIMEDIAWIDGETS_DEPS_X64 = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTNETWORK_DEPS_X86           = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTNETWORK_DEPS_X64           = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTOPENGL_DEPS_X86            = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTOPENGL_DEPS_X64            = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTPLATFORMWINDOWS_DEPS_X86   = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTPLATFORMWINDOWS_DEPS_X64   = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTPLATFORMXCB_DEPS_X86       = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTPLATFORMXCB_DEPS_X64       = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTPLATFORMCOCOA_DEPS_X86     = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTPLATFORMCOCOA_DEPS_X64     = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTPRINTSUPPORT_DEPS_X86      = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTPRINTSUPPORT_DEPS_X64      = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTSERIALPORT_DEPS_X86        = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTSERIALPORT_DEPS_X64        = qt-moc-x64 qt-rcc-x64 qt-uic-x64
QTWIDGETS_DEPS_X86           = qt-moc-x86 qt-rcc-x86 qt-uic-x86
QTWIDGETS_DEPS_X64           = qt-moc-x64 qt-rcc-x64 qt-uic-x64
SINGLEAPPLICATION_DEPS_X86   = qt-moc-x86 qt-rcc-x86 qt-uic-x86
SINGLEAPPLICATION_DEPS_X64   = qt-moc-x64 qt-rcc-x64 qt-uic-x64

#####################################################################################
# Include Targets

include Makefile.targets

all-x86: all-common-x86 \
         brainflow-gforcesdkcxx-wrapper-x86 \
         qt-bootstrap-x86 \
         qt-moc-x86 \
         qt-rcc-x86 \
         qt-uic-x86 \
         qt-platform-windows-x86

all-x64: all-common-x64 \
         brainflow-gforcesdkcxx-wrapper-x64 \
         qt-bootstrap-x64 \
         qt-moc-x64 \
         qt-rcc-x64 \
         qt-uic-x64 \
         qt-platform-windows-x64

all: all-x86 all-x64
