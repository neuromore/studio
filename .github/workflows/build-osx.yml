name: Build MacOS
on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - 'master'
jobs:
###########################################################################

  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 360
    env:
      MODE: release
      TARGET_OS: osx
      TARGET_ARCH: ${{ matrix.arch }}
      JOBS: 4
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11,macos-12]
        arch: [x64,arm64]
    steps:

    # Checkout
    - name: Checkout
      uses: actions/checkout@v3

    # Build QtTools (X64)
    - name: Build QtTools (X64)
      run: make TARGET_ARCH=x64 QtTools -j${{ env.JOBS }}

    # Build Dependencies
    - name: Build Dependencies
      run: make Dependencies -j${{ env.JOBS }}

    # Build Engine
    - name: Build Engine
      run: make Engine -j${{ env.JOBS }}

    # Build QtBase
    - name: Build QtBase
      run: make QtBase -j${{ env.JOBS }}

    # Build Studio
    - name: Build Studio
      run: make Studio -j${{ env.JOBS }}

    # Build EngineJNI
    - name: Build EngineJNI
      run: make EngineJNI -j${{ env.JOBS }}

    # Binary Info
    - name: Binary Info
      run: |
        otool -L ./build/make/bin/osx-${{ matrix.arch }}/Studio
        otool -L ./build/make/lib/osx-${{ matrix.arch }}/EngineJNI.dylib

    # Upload
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: Binaries (${{ matrix.os }}-${{ matrix.arch }})
        path: |
          ./build/make/bin/osx-${{ matrix.arch }}/*
          !./build/make/bin/osx-${{ matrix.arch }}/.gitignore

###########################################################################

  dist:
    needs: build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11,macos-12]
    steps:

    # Checkout
    - name: Checkout
      uses: actions/checkout@v3

    # Download X64 Build
    - name: Download X64 Build
      uses: actions/download-artifact@v2
      with:
        name: Binaries (${{ matrix.os }}-x64)
        path: ./build/make/bin/osx-x64/

    # Download ARM64 Build
    - name: Download ARM64 Build
      uses: actions/download-artifact@v2
      with:
        name: Binaries (${{ matrix.os }}-arm64)
        path: ./build/make/bin/osx-arm64/

    # Load Code Signing Certificate
    - name: Load Code Signing Certificate
      env:
        PFX_BASE64: ${{ secrets.SIGN_PFX_FILE_OSX }}
      run: |
        echo $PFX_BASE64 > ./certs/TrueCert.pfx.base64
        base64 --decode -i ./certs/TrueCert.pfx.base64 -o ./certs/TrueCert.pfx

    # Pack
    - name: Distribution Packages
      env:
        SIGN_PFX_FILE: ../../certs/TrueCert.pfx
        SIGN_PFX_PASS: ${{ secrets.SIGN_PFX_PASS_OSX }}
        PUBLISHERCN: "Developer ID Application: neuromore co (QFSQ5DFX96)"
        PRODUCTSIGNCN: "Developer ID Installer: neuromore co (QFSQ5DFX96)"
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        APPLE_APPSPEC_PASS: ${{ secrets.APPLE_APPSPEC_PASS }}
      run: make dist

    # Upload
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: Packages (${{ matrix.os }})
        path: ./dist/osx-10.15/*.pkg

###########################################################################
 
  dist-store:
    needs: build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11,macos-12]
    steps:

    # Checkout
    - name: Checkout
      uses: actions/checkout@v3

    # Download X64 Build
    - name: Download X64 Build
      uses: actions/download-artifact@v2
      with:
        name: Binaries (${{ matrix.os }}-x64)
        path: ./build/make/bin/osx-x64/

    # Download ARM64 Build
    - name: Download ARM64 Build
      uses: actions/download-artifact@v2
      with:
        name: Binaries (${{ matrix.os }}-arm64)
        path: ./build/make/bin/osx-arm64/

    # Load Code Signing Certificate
    - name: Load Code Signing Certificate
      env:
        PFX_BASE64: ${{ secrets.SIGN_PFX_FILE_OSX }}
      run: |
        echo $PFX_BASE64 > ./certs/TrueCert.pfx.base64
        base64 --decode -i ./certs/TrueCert.pfx.base64 -o ./certs/TrueCert.pfx

    # Pack
    - name: Distribution Packages
      env:
        SIGN_PFX_FILE: ../../certs/TrueCert.pfx
        SIGN_PFX_PASS: ${{ secrets.SIGN_PFX_PASS_OSX }}
        PUBLISHERCN: "3rd Party Mac Developer Application: neuromore co (QFSQ5DFX96)"
        PRODUCTSIGNCN: "3rd Party Mac Developer Installer: neuromore co (QFSQ5DFX96)"
      run: make dist

    # Upload
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: Packages Store (${{ matrix.os }})
        path: ./dist/osx-10.15/*-sig.pkg
