name: Build Android
on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - 'master'
      - 'release'
jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 360
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      MODE: release
      TARGET_OS: android
      TARGET_ARCH: ${{ matrix.arch }}
      BRANDING: ${{ matrix.branding }}
      JOBS: 4
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022]
        arch: [x64,x86,arm64,arm]
        branding: [neuromore]
    steps:

    # Checkout
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.PAT_GITHUB_ACTIONS }}
        lfs: false

    # Load Dependencies from Cache
    - name: Cache Dependencies
      id: cache-dependencies
      uses: actions/cache@v3
      with:
        path: |
          deps/build/make/bin/osx-x64
          deps/build/make/bin/win-x64
          deps/build/make/bin/linux-x64
          deps/build/make/bin/android-*
          deps/build/make/lib/android-*
        key: dependencies-${{ env.BRANCH_NAME }}-${{ env.TARGET_OS }}-${{ env.TARGET_ARCH }}-${{ matrix.os }}-${{ matrix.ndk }}-${{ hashFiles('deps/VERSION') }}

    # Developer Console (WIN-X64)
    - name: MSVC Developer Console (X64)
      if: (matrix.os == 'windows-2019' || matrix.os == 'windows-2022') && steps.cache-dependencies.outputs.cache-hit != 'true'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: amd64

    # Build QtTools (WIN-X64)
    - name: Build QtTools (WIN-X64)
      if: (matrix.os == 'windows-2019' || matrix.os == 'windows-2022') && steps.cache-dependencies.outputs.cache-hit != 'true'
      run: make TARGET_OS=win TARGET_ARCH=x64 QtTools -j${{ env.JOBS }}

    # Build QtTools (OSX-X64)
    - name: Build QtTools (OSX-X64)
      if: (matrix.os == 'macos-11' || matrix.os == 'macos-12') && steps.cache-dependencies.outputs.cache-hit != 'true'
      run: make TARGET_OS=osx TARGET_ARCH=x64 QtTools -j${{ env.JOBS }}

    # Build Dependencies
    - name: Build Dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: make Dependencies -j${{ env.JOBS }}

    # Build Engine
    - name: Build Engine
      run: make Engine -j${{ env.JOBS }}

    # Build EngineLIB
    - name: Build EngineLIB
      run: make EngineLIB -j${{ env.JOBS }}

    # Build EngineJNI
    - name: Build EngineJNI
      run: make EngineJNI -j${{ env.JOBS }}

    # Build QtBase
    - name: Build QtBase
      run: make QtBase -j${{ env.JOBS }}

    # Upload EngineLIB
    - name: Upload EngineLIB
      uses: actions/upload-artifact@v3
      with:
        name: EngineLIB-${{ matrix.arch }}-${{ matrix.branding }} (${{ matrix.os }})
        path: |
          ./src/Engine/neuromoreEngine.h
          ./build/make/lib/android-${{ matrix.arch }}/EngineLIB.so

    # Upload EngineJNI
    - name: Upload EngineJNI
      uses: actions/upload-artifact@v3
      with:
        name: EngineJNI-${{ matrix.arch }}-${{ matrix.branding }} (${{ matrix.os }})
        path: |
          ./build/make/lib/android-${{ matrix.arch }}/EngineJNI.jar
          ./build/make/lib/android-${{ matrix.arch }}/EngineJNI.so
